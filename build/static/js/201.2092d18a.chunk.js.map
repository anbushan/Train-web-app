{"version":3,"file":"static/js/201.2092d18a.chunk.js","mappings":"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","sources":["components/TableComponent.js","pages/Dashboard/Dashboard.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport {  Container,Row, Table } from \"react-bootstrap\";\nimport { FaSort } from \"react-icons/fa\";\n\nimport \"./FilterComponent.css\";\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetWidth: false,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row className=\"d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n         \n          <Table className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: \"100%\" }}\n          >\n          <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={column.id}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: \"nowrap\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (!e.target.classList.contains('fa-sort') && column.render(\"Header\") !== \"ACTIONS\") {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render(\"Header\") === \"ACTIONS\" ? (\n                        <>{column.render(\"Header\")}</>\n                      ) : (\n                        <div>\n                          {column.render(\"Header\")}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={row.id}>\n                      {row.cells.map((cell) => (\n                        <td\n                          {...cell.getCellProps()}\n                          key={cell.column.id}\n                          className=\"text-secondary text-center \"\n                          style={{\n                            textOverflow: \"ellipsis\",\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            maxWidth: \"20ch\",\n                          }}\n                        >\n                          {cell.render(\"Cell\")}\n                        </td>\n                      ))}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n         \n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport user from \"../../assets/images/user.png\";\nimport feedback from \"../../assets/images/feedback.png\";\nimport withdrawrequest from \"../../assets/images/withdraw request.png\";\nimport train from \"../../assets/images/train.png\";\nimport station from \"../../assets/images/station.png\";\nimport metrotrain from \"../../assets/images/metrotrain.png\";\nimport { useGetDashboardQuery } from \"../../redux/features/api/DashboardApi\";\nimport Loader from \"../Loader/Loader\";\nimport TableComponents from \"../../components/TableComponent\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Dashboard = () => {\n  const { data, error, isLoading } = useGetDashboardQuery();\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (!data) {\n    return <div>No data available</div>;\n  }\n\n  const {\n    totalUsers,\n    totalFeedbacks,\n    totalWithdrawRequests,\n    totalTrains,\n    totalStations,\n    totallyMetroTrains,\n    users = [],\n    withdrawRequests = [],\n  } = data;\n\n  const COLUMNS = [\n    {\n      Header: \"ID\",\n      accessor: (d, i) => i + 1,\n      minWidth: 10,\n    },\n    {\n      Header: \"Phone Number\",\n      accessor: \"phoneNumber\",\n    },\n    {\n      Header: \"Referral Id\",\n      accessor: \"referralId\",\n    },\n    {\n      Header: \"Created At\",\n      accessor: \"createdAt\",\n    },\n  ];\n\n  const COLUMNSS = [\n    {\n      Header: \"ID\",\n      accessor: (d, i) => i + 1,\n      minWidth: 10,\n    },\n    {\n      Header: \"Phone Number\",\n      accessor: \"phoneNumber\",\n    },\n    {\n      Header: \"Upi Id \",\n      accessor: \"upiId\",\n    },\n    {\n      Header: \"Withdraw Amount\",\n      accessor: \"withdrawAmount\",\n    },\n    {\n      Header: \"Status \",\n      accessor: \"status\",\n    },\n    {\n      Header: \"Created At\",\n      accessor: \"createdAt\",\n    },\n  ];\n\n  return (\n    <Container fluid>\n      <Row className=\"mt-4 mx-2\">\n        <Col>\n          <h4 className=\"fs-4 fw-bolder\">Dashboard</h4>\n        </Col>\n      </Row>\n\n      <Row className=\"mt-5 flex-warp\">\n        <Col xs={12} md={6} lg={4} className=\"mb-3\">\n        <Link to=\"/admin/user-list\" className=\"link-unstyled\">\n          <Card className=\"p-3 rounded shadow\">\n            <div className=\"d-flex align-items-center\">\n              <img src={user} width={60} className=\"rounded-circle\" alt=\"User\" />\n              <div className=\"ms-3\">\n                <div className=\"fs-5 fw-bolder\">Users Count</div>\n                <h3 className=\"fs-8 fw-bolder\">{totalUsers}</h3>\n                <div className=\"fs-14\">Total Number of Users</div>\n              </div>\n            </div>\n          </Card>\n          </Link>\n        </Col>\n\n        <Col xs={12} md={6} lg={4} className=\"mb-3\">\n        <Link to=\"/admin/feedback\" className=\"link-unstyled\">\n          <Card className=\"p-3 rounded shadow\">\n            <div className=\"d-flex align-items-center\">\n              <img src={feedback} width={60} className=\"rounded-circle\" alt=\"Feedback\" />\n              <div className=\"ms-3\">\n                <div className=\"fs-5 fw-bolder\">Feedback Count</div>\n                <h3 className=\"fs-8 fw-bolder\">{totalFeedbacks}</h3>\n                <div className=\"fs-14\">Total Number of Feedbacks</div>\n              </div>\n            </div>\n          </Card>\n          </Link>\n        </Col>\n\n        <Col xs={12} md={6} lg={4} className=\"mb-3\">\n        <Link to=\"/admin/withdraw-request\" className=\"link-unstyled\">\n          <Card className=\"p-3 rounded shadow\">\n            <div className=\"d-flex align-items-center\">\n              <img src={withdrawrequest} width={60} className=\"rounded-circle\" alt=\"Withdraw Request\" />\n              <div className=\"ms-3\">\n                <div className=\"fs-5 fw-bolder\">Withdraw Requests</div>\n                <h3 className=\"fs-8 fw-bolder\">{totalWithdrawRequests}</h3>\n                <div className=\"fs-14\">Total Number of Withdraw Requests</div>\n              </div>\n            </div>\n          </Card>\n          </Link>\n        </Col>\n\n        <Col xs={12} md={6} lg={4} className=\"mb-3\">\n        <Link to=\"/admin/train\" className=\"link-unstyled\">\n          <Card className=\"p-3 rounded shadow\">\n            <div className=\"d-flex align-items-center\">\n              <img src={train} width={60} className=\"rounded-circle\" alt=\"Withdraw Request\" />\n              <div className=\"ms-3\">\n                <div className=\"fs-5 fw-bolder\">Total Trains</div>\n                <h3 className=\"fs-8 fw-bolder\">{totalTrains}</h3>\n                <div className=\"fs-14\">Total Number of Trains</div>\n              </div>\n            </div>\n          </Card>\n          </Link>\n        </Col>\n        \n        <Col xs={12} md={6} lg={4} className=\"mb-3\">\n        <Link to=\"/admin/station\" className=\"link-unstyled\">\n          <Card className=\"p-3 rounded shadow\">\n            <div className=\"d-flex align-items-center\">\n              <img src={station} width={60} className=\"rounded-circle\" alt=\"Withdraw Request\" />\n              <div className=\"ms-3\">\n                <div className=\"fs-5 fw-bolder\">Total Stations</div>\n                <h3 className=\"fs-8 fw-bolder\">{totalStations}</h3>\n                <div className=\"fs-14\">Total Number of Stations</div>\n              </div>\n            </div>\n          </Card>\n          </Link>\n        </Col>\n           \n        <Col xs={12} md={6} lg={4} className=\"mb-3\">\n        <Link to=\"/admin/metro-train\" className=\"link-unstyled\">\n          <Card className=\"p-3 rounded shadow\">\n            <div className=\"d-flex align-items-center\">\n              <img src={metrotrain} width={60} className=\"rounded-circle\" alt=\"Withdraw Request\" />\n              <div className=\"ms-3\">\n                <div className=\"fs-5 fw-bolder\">Total Metro Trains</div>\n                <h3 className=\"fs-8 fw-bolder\">{totallyMetroTrains}</h3>\n                <div className=\"fs-14\">Total Number of Trains</div>\n              </div>\n            </div>\n          </Card>\n          </Link>\n        </Col>\n        \n      </Row>\n\n      <Row className=\"mt-3\">\n        <Col xs={12} md={6} lg={12} className=\"mb-3\">\n          <Card className=\"p-3 rounded shadow\">\n            <h4 className=\"fs-4 mb-4 fw-bolder text-start\">New User Join</h4>\n            {users.length > 0 ? (\n              <TableComponents COLUMNS={COLUMNS} MOCK_DATA={users} />\n            ) : (\n              <div>No new users available</div>\n            )}\n          </Card>\n        </Col>\n\n        <Col xs={12} md={6} lg={12} className=\"mb-3\">\n          <Card className=\"p-3 rounded shadow\">\n            <h4 className=\"fs-4 mb-4 fw-bolder text-start\">New Withdraw Request</h4>\n            {withdrawRequests.length > 0 ? (\n              <TableComponents COLUMNS={COLUMNSS} MOCK_DATA={withdrawRequests} />\n            ) : (\n              <div>No new withdrawal requests available</div>\n            )}\n          </Card>\n        </Col>\n        \n      </Row>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","_jsx","children","Container","fluid","className","Row","_jsxs","Table","striped","bordered","hover","responsive","style","width","map","headerGroup","_createElement","getHeaderGroupProps","key","id","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","getCellProps","textOverflow","overflow","maxWidth","colSpan","Dashboard","error","isLoading","useGetDashboardQuery","Loader","message","totalUsers","totalFeedbacks","totalWithdrawRequests","totalTrains","totalStations","totallyMetroTrains","users","withdrawRequests","Col","xs","md","lg","Link","to","Card","src","alt","train","station","metrotrain","TableComponents","Header","accessor","d","i","minWidth","React","p","ref","classNames"],"sourceRoot":""}
{"version":3,"file":"static/js/1017.4a33af33.chunk.js","mappings":"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","sources":["components/BasicButton.js","components/TextInput.js","pages/Train/AddTrain.js","pages/Train/TrainValidation.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nconst BasicButton = (props) => {\n  const {\n    variant,\n    onClick,\n    label,\n    size,\n    icon,\n    className,\n    isLoading,\n    loaderVariant,\n    loaderSize,\n    type\n  } = props;\n  const buttonStyle = {\n    backgroundColor:\"#0077B2\",\n    borderColor: \"#0077B2\",\n    color:\"white\",\n  };\n  return (\n    <Button\n      style={buttonStyle}\n      variant={variant}\n      className={className}\n      size={size}\n      type={type}\n      onClick={onClick}\n      disabled={!isLoading ? false : true}\n    >\n      {!isLoading ? (\n        <>\n          {icon} {label}\n        </>\n      ) : (\n        <>\n          <Spinner\n            size={`${!loaderSize ? \"sm\" : loaderSize}`}\n            variant={`${!loaderVariant ? \"#0077B2\" : loaderVariant}`}\n          />\n        </>\n      )}\n    </Button>\n  );\n};\nexport default BasicButton;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nconst TextInput = (props) => {\n  const {\n    label,\n    name,\n    id,\n    type,\n    placeholder,\n    htmlFor,\n    lableClassName,\n    value,\n    onChange,\n    onBlur,\n    disabled,\n    className,\n    lg,\n    md,\n    xxl,\n    xl,\n    sm,\n    validation,\n    star,\n  } = props;\n  return (\n    <Form.Group>\n      <Form.Label htmlFor={htmlFor} className={lableClassName}>\n        {label}\n        <span className={`text-danger ${star === \"none\" ? `d-${star}` : \"\"}`}>\n          *\n        </span>\n      </Form.Label>\n      <Form.Control\n        name={name}\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        disabled={disabled}\n        className={className}\n        lg={lg}\n        md={md}\n        xxl={xxl}\n        xl={xl}\n        sm={sm}\n      />\n      {validation}\n    </Form.Group>\n  );\n};\nexport default TextInput;\n","import { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { TrainSchema } from \"../../pages/Train/TrainValidation\";\nimport BasicButton from \"../../components/BasicButton\";\nimport TextInput from \"../../components/TextInput\";\n\nimport { useAddTrainMutation } from \"../../redux/features/api/TrainApi\"\nimport { toast } from \"react-toastify\";\n\n\n\nconst AddTrain = () => {\n  const [TrainNo, setTrainNo] = useState(\"\");\n  const [TrainName, setTrainName] = useState(\"\");\n  const [tamilTrainName, setTamilTrainName] = useState(\"\");\n  const [teluguTrainName, setTeluguTrainName] = useState(\"\");\n  const [kannadaTrainName, setkannadaTrainName] = useState(\"\");\n  const [hindiTrainName, setHindiTrainName] = useState(\"\");\n\n\n  \n  const [TrainAddData,{isLoading}]=useAddTrainMutation();\n  \n \n\n  const navigate = useNavigate();\n  const handleCancel = () => {\n    navigate(\"/admin/train\");\n  };\n\n \n  const initialValues = {\n    TrainNo: \"\",\n    TrainName: \"\",\n    tamilTrainName: \"\",\n    teluguTrainName: \"\",\n    kannadaTrainName: \"\",\n    hindiTrainName: \"\",\n   \n    \n  };\n  const handleAddData = async () => {\n    try {\n      const response = await TrainAddData ({\n        TrainNo: TrainNo,\n        TrainName: TrainName,\n        tamilTrainName:tamilTrainName,\n        teluguTrainName: teluguTrainName,\n        kannadaTrainName: kannadaTrainName,\n        hindiTrainName:hindiTrainName,\n       \n     \n      \n        \n      });\n    \n   \n      if (response?.data) {\n        setTrainNo(\"\");\n        setTrainName(\"\");\n        setTamilTrainName(\"\");\n        setTeluguTrainName(\"\");\n        setkannadaTrainName(\"\");\n        setHindiTrainName(\"\");\n      \n      \n        navigate(\"/admin/train\");\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setTimeout(() => navigate(\"/admin/train\"), 3000);\n        console.log(response.error.data);\n       \n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        console.log(\"else part\");\n        console.log(response.error);\n      }\n    } catch (error) {\n      console.error(error);\n   \n    }\n  };\n\n\n  return (\n    <div>\n      <Container fluid>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={TrainSchema}\n          onSubmit={handleAddData}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <>\n              <Form>\n                <Row className=\"d-flex flex-row justify-content-between align-items-center\">\n                  <Col className=\"d-flex justify-content-start mb-3 mt-3\">\n                    <h4 onClick={handleCancel}>\n                      <AiOutlineArrowLeft />\n                    </h4>\n                    <h4>Add Train</h4>\n                  </Col>\n                  <Col className=\"d-sm-none d-none d-md-none d-lg-flex d-xxl-flex d-xl-flex flex-row justify-content-end align-items-center\">\n                    <BasicButton\n                      className=\"m-1\"\n                      variant=\"secondary\"\n                      onClick={handleCancel}\n                      label=\"Cancel\"\n                    />\n                    <BasicButton\n                      className=\"m-1\"\n                      label=\"Save\"\n                      type=\"button\"\n                      isLoading={isLoading}\n                      loaderVariant=\"info\"\n                     disabled={isSubmitting}\n                      onClick={\n                        (TrainNo=== '')||\n                        TrainName === ''||\n                        (tamilTrainName=== '')||\n                        teluguTrainName === ''||\n                        (kannadaTrainName=== '')||\n                        hindiTrainName === ''||\n\n                          (touched.TrainNo && errors.TrainNo) ||\n                        (touched.TrainName && errors.TrainName) ||\n                        (touched.tamilTrainName && errors.tamilTrainName) ||\n                        (touched.teluguTrainName && errors.teluguTrainName) || \n                        (touched.kannadaTrainName && errors.kannadaTrainName) ||\n                        (touched.hindiTrainName && errors.hindiTrainName) \n                        \n                       \n                          ? handleSubmit\n                          : handleAddData\n                      }  />\n                  </Col>\n                </Row>\n                <Row className=\"d-flex flex-wrap flex-lg-row flex-xxl-row flex-xl-row flex-column flex-md-column flex-sm-column  mt-4\">\n                  <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">English:</h4>\n                \n                   \n                    \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"Train No\"\n                        type=\"\"\n                        name=\"TrainNo\"\n                        className={`form-control ${\n                          touched.TrainNo && errors.TrainNo ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTrainNo(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.TrainNo && errors.TrainNo ? (\n                            <p className=\"text-danger\">{errors.TrainNo}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"Train Name\"\n                        type=\"\"\n                        name=\"TrainName\"\n                        className={`form-control ${\n                          touched.TrainName && errors.TrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.TrainName && errors.TrainName ? (\n                            <p className=\"text-danger\">{errors.TrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n\n\n                    <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Tamil:</h4>\n                \n                   \n                    \n                 \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"ரயில் பெயர்\"\n                        type=\"\"\n                        name=\"tamilTrainName\"\n                        className={`form-control ${\n                          touched.tamilTrainName && errors.tamilTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTamilTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.tamilTrainName && errors.tamilTrainName ? (\n                            <p className=\"text-danger\">{errors.tamilTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n                </Row>\n\n\n\n\n\n\n\n\n\n\n                <Row className=\"d-flex flex-wrap flex-lg-row flex-xxl-row flex-xl-row flex-column flex-md-column flex-sm-column  mt-4\">\n                <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Hindi:</h4>\n                \n                   \n                 \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"ट्रेन का नाम\"\n                        type=\"\"\n                        name=\"hindiTrainName\"\n                        className={`form-control ${\n                          touched.hindiTrainName && errors.hindiTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setHindiTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.hindiTrainName && errors.hindiTrainName ? (\n                            <p className=\"text-danger\">{errors.hindiTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n                 \n\n                 \n                    </Col>\n\n                    <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Telugu:</h4>\n                \n                   \n                    \n                   \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"రైలు పేరు\"\n                        type=\"\"\n                        name=\"teluguTrainName\"\n                        className={`form-control ${\n                          touched.teluguTrainName && errors.teluguTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTeluguTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.teluguTrainName && errors.teluguTrainName ? (\n                            <p className=\"text-danger\">{errors.teluguTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n                </Row>\n\n\n\n\n\n\n\n                <Row className=\"d-flex flex-wrap flex-lg-row flex-xxl-row flex-xl-row flex-column flex-md-column flex-sm-column  mt-4\">\n                  <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Kannada:</h4>\n                \n                   \n                    \n                   \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"ರೈಲು ಹೆಸರು\"\n                        type=\"\"\n                        name=\"kannadaTrainName\"\n                        className={`form-control ${\n                          touched.kannadaTrainName && errors.kannadaTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setkannadaTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.kannadaTrainName && errors.kannadaTrainName ? (\n                            <p className=\"text-danger\">{errors.kannadaTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n\n\n                               </Row>\n                <Row className=\"d-sm-flex d-flex d-md-flex d-lg-none d-xxl-none d-xl-none flex-row justify-content-between align-items-center mt-3\">\n                  <Col className=\"d-flex justify-content-start align-items-center\">\n                    <BasicButton\n                      className=\"m-1\"\n                      variant=\"secondary\"\n                      onClick={handleCancel}\n                      label=\"Cancel\"\n                    />\n                  </Col>\n                  <Col className=\"d-flex justify-content-end align-items-center\">\n                    <BasicButton\n                      className=\"m-1\"\n                      label=\"Save\"\n                      type=\"button\"\n                      isLoading={isLoading}\n                      loaderVariant=\"info\"\n                      disabled={isSubmitting}\n                      onClick={\n                        (TrainNo=== '')||\n                        TrainName === ''||\n                        (tamilTrainName=== '')||\n                        teluguTrainName === ''||\n                        (kannadaTrainName=== '')||\n                        hindiTrainName === ''||\n\n                          (touched.TrainNo && errors.TrainNo) ||\n                        (touched.TrainName && errors.TrainName) ||\n                        (touched.tamilTrainName && errors.tamilTrainName) ||\n                        (touched.teluguTrainName && errors.teluguTrainName) || \n                        (touched.kannadaTrainName && errors.kannadaTrainName) ||\n                        (touched.hindiTrainName && errors.hindiTrainName) \n                       \n                          ? handleSubmit\n                          : handleAddData\n                      }\n                    />\n                  </Col>\n                </Row>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Container>\n    </div>\n  );\n};\nexport default AddTrain;","import * as Yup from \"yup\";\n\nexport const TrainSchema = Yup.object().shape({\n    TrainNo: Yup.string()\n        .required(\"Train number is required.\")\n        .matches(/^\\d{5}$/, \"Train number must contain exactly five digits.\"),\n\n    TrainName: Yup.string().required(\"Train name is required.\"),\n\n    tamilTrainName: Yup.string().required(\"ரயிலின் பெயர் கண்டிப்பாக இருக்க வேண்டும்.\"),\n\n    teluguTrainName: Yup.string().required(\"రైలు పేరు తప్పనిసరిగా ఉండాలి.\"),\n\n    kannadaTrainName: Yup.string().required(\"ರೈಲಿನ ಹೆಸರು ಕಡ್ಡಾಯವಾಗಿರಬೇಕು.\"),\n\n    hindiTrainName: Yup.string().required(\"ट्रेन का नाम आवश्यक है.\"),\n});\n\n"],"names":["props","variant","onClick","label","size","icon","className","isLoading","loaderVariant","loaderSize","type","_jsx","Button","style","backgroundColor","borderColor","color","disabled","children","_Fragment","Spinner","concat","_jsxs","name","id","placeholder","htmlFor","lableClassName","value","onChange","onBlur","lg","md","xxl","xl","sm","validation","star","Form","Group","Label","Control","AddTrain","TrainNo","setTrainNo","useState","TrainName","setTrainName","tamilTrainName","setTamilTrainName","teluguTrainName","setTeluguTrainName","kannadaTrainName","setkannadaTrainName","hindiTrainName","setHindiTrainName","TrainAddData","useAddTrainMutation","navigate","useNavigate","handleCancel","handleAddData","async","response","_response$data","_response$error","data","toast","success","message","autoClose","setTimeout","console","log","error","Container","fluid","Formik","initialValues","validationSchema","TrainSchema","onSubmit","_ref","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Row","Col","AiOutlineArrowLeft","BasicButton","TextInput","e","target","Yup","shape","required","matches"],"sourceRoot":""}
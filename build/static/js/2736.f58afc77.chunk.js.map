{"version":3,"file":"static/js/2736.f58afc77.chunk.js","mappings":"8JAIA,MAaA,EAbgBA,IAEZC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACF,UAAU,mEAAkEC,UAC/EF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACH,UAAU,0DAAyDC,UACtEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,SAAEH,EAAMM,e,2ECN1C,MAqBA,EArBqBN,IAEjBC,EAAAA,EAAAA,KAAA,OAAAE,UACEI,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,KAAMT,EAAMU,YAAaC,OAAQX,EAAMY,QAASC,UAAQ,EAAAV,SAAA,EAC7DF,EAAAA,EAAAA,KAACO,EAAAA,EAAMM,OAAM,CAACC,aAAW,EAAAZ,UACvBF,EAAAA,EAAAA,KAACO,EAAAA,EAAMQ,MAAK,CAAAb,SAAEH,EAAMiB,iBAEtBV,EAAAA,EAAAA,MAACC,EAAAA,EAAMU,KAAI,CAAAf,SAAA,CAAEH,EAAMmB,YAAY,SAC/BZ,EAAAA,EAAAA,MAACC,EAAAA,EAAMY,OAAM,CAAAjB,SAAA,EACXF,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,QAAQ,SAASC,QAASvB,EAAMwB,IAAIrB,SAAC,SAG7CF,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASvB,EAAMY,QAAQT,SAAC,c,0LCA9D,MAyLA,EAzLoBH,IAClB,MAAMyB,GAAUC,EAAAA,EAAAA,UAAQ,IAAM1B,EAAM2B,SAAS,CAAC3B,EAAM2B,UAC9CC,GAAOF,EAAAA,EAAAA,UAAQ,IAAM1B,EAAM6B,WAAa,IAAI,CAAC7B,EAAM6B,aAEnD,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,WAEZC,EAAU,KACVC,IACEC,EAAAA,EAAAA,UACF,CACEV,UACAG,OACAQ,gBAAgB,GAElBC,EAAAA,gBACAC,EAAAA,UACAC,EAAAA,eAGF,OACEtC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAACC,OAAK,EAACvC,UAAU,8BAA6BC,UACtDI,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAD,SAAA,EACJI,EAAAA,EAAAA,MAACmC,EAAAA,EAAK,CACFxC,UAAU,4CACVyC,SAAO,EACPC,UAAQ,EACRC,OAAK,KACDf,IACJgB,YAAY,EACZC,MAAO,CAAEC,MAAO,QAAS7C,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,SAAAE,SACI6B,EAAaiB,KAAKC,IACjBC,EAAAA,EAAAA,eAAA,SAAQD,EAAYE,sBAAuBC,IAAKH,EAAYI,IACzDJ,EAAYK,QAAQN,KAAKO,IACxBL,EAAAA,EAAAA,eAAA,SACMK,EAAOC,iBACXJ,IAAKG,EAAOF,GACZpD,UAAU,wBACV6C,MAAO,CACLC,MAAM,GAADU,OAAKF,EAAOR,MAAK,MACtBW,WAAY,SACZC,eAAgB,SAChBC,WAAY,UAEdtC,QAAUuC,IAEHA,EAAEC,OAAOC,UAAUC,SAAS,YAA0C,YAA5BT,EAAOU,OAAO,WAE3DV,EAAOW,cAAcX,EAAOY,aAC9B,GAG2B,YAA5BZ,EAAOU,OAAO,WACbjE,EAAAA,EAAAA,KAAAoE,EAAAA,SAAA,CAAAlE,SAAGqD,EAAOU,OAAO,aAEjB3D,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CACGqD,EAAOU,OAAO,WACfjE,EAAAA,EAAAA,KAACqE,EAAAA,IAAM,CAACpE,UAAU,qBAQhCD,EAAAA,EAAAA,KAAA,YAAW8B,IAAmB5B,SAC3B+B,EAAKqC,OAAS,EACbrC,EAAKe,KAAKuB,IACRvC,EAAWuC,IAETrB,EAAAA,EAAAA,eAAA,SAAQqB,EAAIC,cAAepB,IAAKmB,EAAIlB,IACjCkB,EAAIE,MAAMzB,KAAK0B,IACdxB,EAAAA,EAAAA,eAAA,SACMwB,EAAKC,eACTvB,IAAKsB,EAAKnB,OAAOF,GACjBpD,UAAU,8BACV6C,MAAO,CACL8B,aAAc,WACdC,SAAU,SACVnB,WAAY,SACZoB,SAAU,SAGXJ,EAAKT,OAAO,gBAOvBjE,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MACE+E,QAASvD,EAAQ8C,OACjBrE,UAAU,wBAAuBC,SAClC,0BAOTI,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CACFH,UAAS,GAAAwD,OACPxB,EAAKqC,OAAS,EAAI,SAAW,SAAQ,uDACepE,SAAA,EAEtDI,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACH,UAAU,4DAA2DC,SAAA,EACxEI,EAAAA,EAAAA,MAAA,QAAML,UAAU,MAAKC,SAAA,CAAC,OACf,KACLI,EAAAA,EAAAA,MAAA,UAAQL,UAAU,MAAKC,SAAA,CACpBH,EAAMiF,YAAY,OAAKjF,EAAMkF,kBAGlCjF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFI,EAAAA,EAAAA,MAAA,QAAML,UAAU,MAAKC,SAAA,CAAC,iBACL,KACfF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,MAAKC,SAAEH,EAAMmF,wBAIrClF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACH,UAAU,mGAAkGC,UAC/GF,EAAAA,EAAAA,KAACmF,IAAa,CACZC,WAAW,MACXC,aAAeC,GACbvF,EAAMwF,eAAeD,EAAaE,SAAW,GAE/CC,mBAAoB,EACpBC,UAAW3F,EAAMkF,WACjBU,sBAAuB,KACvBC,gBAAiB,SACjBC,cAAe,YACfC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,mBAAmB,aACnBC,eACEpG,EAAAA,EAAAA,KAACqG,EAAAA,GAAYC,SAAQ,CACnBC,MAAO,CAAEC,MAAO,UAAWC,KAAM,QAASvG,UAE1CF,EAAAA,EAAAA,KAAC0G,EAAAA,IAAgB,MAGrBC,WACE3G,EAAAA,EAAAA,KAACqG,EAAAA,GAAYC,SAAQ,CACnBC,MAAO,CAAEC,MAAO,UAAWC,KAAM,QAASvG,UAE1CF,EAAAA,EAAAA,KAAC4G,EAAAA,IAAiB,WAK1BtG,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAACH,UAAU,mGAAkGC,SAAA,EAC/GF,EAAAA,EAAAA,KAACoB,EAAAA,EACC,CACA0B,MAAO,CAAE+D,gBAAiB,UAAWC,OAAQ,QAC7CxF,QAASA,IAAMvB,EAAMwF,eAAexF,EAAMiF,YAAc,GACxD+B,SAAgC,IAAtBhH,EAAMiF,YAChB/E,UAAU,MAAKC,UAEfF,EAAAA,EAAAA,KAACgH,EAAAA,IAAW,CAACP,KAAM,QAErBzG,EAAAA,EAAAA,KAACoB,EAAAA,EACC,CACA0B,MAAO,CAAE+D,gBAAiB,UAAWC,OAAQ,QAC7CxF,QAASA,KACPvB,EAAMwF,eAAexF,EAAMiF,YAAc,EAAE,EAE7C+B,SAAUhH,EAAMiF,cAAgBjF,EAAMkF,WAAW/E,UAEjDF,EAAAA,EAAAA,KAACiH,EAAAA,IAAY,CAACR,KAAM,mBAM1B,C,wMCvLV,MA4RA,EA5RaS,KACX,MAAOvF,EAAMwF,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCnC,EAAYwC,IAAiBL,EAAAA,EAAAA,UAAS,IACtCM,EAAYC,IAAiBP,EAAAA,EAAAA,UAAS,KACtCQ,EAAYC,IAAiBT,EAAAA,EAAAA,WAAS,IACtCpC,EAAaO,IAAkB6B,EAAAA,EAAAA,UAAS,IACxClC,EAAc4C,IAAmBV,EAAAA,EAAAA,aAEtCzF,KAAMoG,EACNC,UAAWC,EAAY,QACvBC,IACEC,EAAAA,EAAAA,IAAqBnD,IAClBoD,IAAiBC,EAAAA,EAAAA,OACjBC,EAAgBC,IAAqBnB,EAAAA,EAAAA,WAAS,IAErDoB,EAAAA,EAAAA,YAAU,KACJT,GAAiBA,EAAcpG,OACjCwF,EAAQY,EAAcpG,MACtB8F,EAAcM,EAAcU,WAAWxD,YACvC6C,EAAgBC,EAAcU,WAAWvD,cAC3C,GACC,CAAC6C,IAEJ,MAsBMW,EAAeC,UACnB,GAAKtB,GAASE,EAOd,GAAKF,EAKL,GAAKE,EAAL,CAKAgB,GAAkB,SACZL,IACNK,GAAkB,GAClB,IACE,MAAMK,QAAiBC,EAAAA,EAAMC,IAAI,6DAADrF,OAC+B8D,EAAQ,UAAA9D,OAAS4D,IAE3D,IAAD0B,EAQbC,EARP,GAAY,OAARJ,QAAQ,IAARA,GAAAA,EAAUjH,KACZsH,QAAQC,IAAI7B,GACZ4B,QAAQC,IAAI3B,GACZ0B,QAAQC,IAAIN,GACZO,EAAAA,GAAMC,QAAgB,OAARR,QAAQ,IAARA,GAAc,QAANG,EAARH,EAAUjH,YAAI,IAAAoH,OAAN,EAARA,EAAgBM,QAAS,CAAEC,UAAW,MACpDhC,EAAQ,IACRE,EAAY,IACZ+B,OAAOC,SAASC,cAEhBN,EAAAA,GAAMO,MAAc,OAARd,QAAQ,IAARA,GAAe,QAAPI,EAARJ,EAAUc,aAAK,IAAAV,OAAP,EAARA,EAAiBrH,KAAK+H,MAAO,CAAEJ,UAAW,MACtDhC,EAAQ,IACRE,EAAY,GAEhB,CAAE,MAAOkC,GACPT,QAAQS,MAAMA,EAChB,CAxBA,MAFEP,EAAAA,GAAMO,MAAM,4BAA6B,CAAEJ,UAAW,WALtDH,EAAAA,GAAMO,MAAM,4BAA6B,CAAEJ,UAAW,WAPtDH,EAAAA,GAAMO,MAAM,4CAA6C,CACvDJ,UAAW,KAqCf,EAeI5H,EAAU,CACd,CACEb,OAAQ,KACR8I,SAAU,QAEZ,CACE9I,OAAQ,WACR8I,SAAU,WACV5G,MAAO,OACP6G,SAAU,KAEZ,CACE/I,OAAQ,WACR8I,SAAU,OACV5G,MAAO,OACP6G,SAAU,KAEZ,CACE/I,OAAQ,QACR8I,SAAU,SAEZ,CACE9I,OAAQ,QACR8I,SAAU,SAEZ,CACE9I,OAAQ,eACR8I,SAAU,eAEZ,CACE9I,OAAQ,UACR8I,SAAU,SACVE,MAAO,QACPC,KAAO/J,IACL,MAAMgK,EAAShK,EAAMwE,IAAIyF,SAASC,IAClC,OACEjK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,UACxEF,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLC,QAAQ,SACRpB,UAAU,MACVqB,QAASA,KAlHnBqG,EAkH0CoC,QAjH1ClC,GAAc,IAiHoC3H,UAExCF,EAAAA,EAAAA,KAACkK,EAAAA,IAAQ,OAEP,IAMd,OACElK,EAAAA,EAAAA,KAAA,OAAAE,SACI+H,GA4HAjI,EAAAA,EAAAA,KAACmK,EAAAA,EAAM,KA3HP7J,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAAlE,SAAA,EACEI,EAAAA,EAAAA,MAACiC,EAAAA,EAAS,CAACC,OAAK,EAACvC,UAAU,OAAMC,SAAA,EAC/BF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAAAF,UACFF,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLR,QAAQ,QACR+J,iBAAiB,iDAIvBpK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CACdD,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAAAF,UACJF,EAAAA,EAAAA,KAACqK,EAAAA,EAAI,CAACC,SA9EO3B,UACvB9E,EAAE0G,uBACI7B,GAAc,EA4EwB8B,WAzEtB3G,IACR,UAAVA,EAAET,MACJS,EAAE0G,iBACF7B,IACF,EAqEuExI,UACzDI,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAACF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACqK,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEzK,UACxBI,EAAAA,EAAAA,MAAC+J,EAAAA,EAAKO,MAAK,CAACC,UAAU,WAAU3K,SAAA,EAC9BF,EAAAA,EAAAA,KAACqK,EAAAA,EAAKS,MAAK,CACT7K,UAAU,YACV6C,MAAO,CAAEiI,WAAY,UAAW7K,SACjC,gBAGDI,EAAAA,EAAAA,MAAC+J,EAAAA,EAAKW,OAAM,CACVzE,MAAOc,EACP4D,SAAWpH,GAAMyD,EAAQzD,EAAEC,OAAOyC,OAClCtG,UAAU,OAAMC,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,GAAGQ,UAAQ,EAAA7G,SAAC,sBAG1BF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,KAAIrG,SAAC,WACnBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,KAAIrG,SAAC,aACnBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,KAAIrG,SAAC,YACnBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,KAAIrG,SAAC,mBAIzBF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACqK,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEzK,UACxBI,EAAAA,EAAAA,MAAC+J,EAAAA,EAAKO,MAAK,CAACC,UAAU,WAAU3K,SAAA,EAC9BF,EAAAA,EAAAA,KAACqK,EAAAA,EAAKS,MAAK,CACT7K,UAAU,YACV6C,MAAO,CAAEiI,WAAY,UAAW7K,SACjC,iBAGDI,EAAAA,EAAAA,MAAC+J,EAAAA,EAAKW,OAAM,CACVzE,MAAOgB,EACP0D,SAAWpH,GAAM2D,EAAY3D,EAAEC,OAAOyC,OACtCtG,UAAU,OAAMC,SAAA,EAEhBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,GAAGQ,UAAQ,EAAA7G,SAAC,uBAG1BF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,UAASrG,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,QAAOrG,SAAC,WACtBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,SAAQrG,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,WAAUrG,SAAC,cACzBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,aAAYrG,SAAC,gBAC3BF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,gBAAerG,SAAC,mBAC9BF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,SAAQrG,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,UAASrG,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQuG,MAAM,SAAQrG,SAAC,oBAI7BF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACqK,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG1K,UAAU,uBAAsBC,UACzDF,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACL0B,MAAO,CACL+D,gBAAiB,UACjBC,OAAQ,OACRoE,UAAW,OACXC,SAAU,YAEZC,KAAK,SACLrE,SAAUuB,EAAepI,UAEzBF,EAAAA,EAAAA,KAACqL,EAAAA,IAAS,CACR5E,KAAM,GACN3D,MAAO,CACLwI,YAAa,MACbC,UAAWjD,EACP,0BACA,QAENrI,UAAU,6DASxBD,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFqK,GAAI,GACJE,GAAI,GACJa,GAAI,GACJC,IAAK,GACLf,GAAI,GACJzK,UAAU,mBAAkBC,UAE5BF,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdhK,QAASA,EACTE,UAAWD,EACXqD,YAAaA,EACbC,WAAYA,EACZM,eAAgBA,EAChBL,aAAcA,YAKtBlF,EAAAA,EAAAA,KAAC2L,EAAAA,EAAW,CACVlL,YAAamH,EACbjH,QAtPgBiL,IAAM/D,GAAc,GAuPpCtG,IAhPSoH,UACjB,IACE,MAAMC,QAAiBR,EAAcV,GAK7B,IAADmE,EAFP,GAFAhE,GAAc,GACdF,EAAc,IACF,OAARiB,QAAQ,IAARA,GAAAA,EAAUjH,KACZwH,EAAAA,GAAMC,QAAQR,EAASjH,KAAK0H,QAAS,CAAEC,UAAW,WAElDH,EAAAA,GAAMO,MAAc,OAARd,QAAQ,IAARA,GAAe,QAAPiD,EAARjD,EAAUc,aAAK,IAAAmC,OAAP,EAARA,EAAiBlK,KAAK+H,MAAO,CAAEJ,UAAW,KAE1D,CAAE,MAAOI,GACPT,QAAQS,MAAMA,EAChB,GAqOQxI,YAAY,8BACZF,YAAY,aAMd,C,2ECjSV,MAiBA,EAjBemJ,KACb7J,EAAAA,EAAAA,MAACiC,EAAAA,EAAS,CAACtC,UAAU,qFAAoFC,SAAA,EACvGF,EAAAA,EAAAA,KAAC8L,EAAAA,GAAa,CACZC,SAAS,EACTC,OAAO,KACPjJ,MAAM,KACNkJ,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,UAAU,yBACVC,aAAc,CAAC,EACfC,aAAa,MAEftM,EAAAA,EAAAA,KAAA,KAAGC,UAAU,GAAEC,SAAC,0B","sources":["components/BasicHeader.js","components/DeleteModel.js","components/TablePaginationComponent.js","pages/News/News.js","pages/loginForms/loader/Loader.js"],"sourcesContent":["import React from \"react\";\nimport {  Col, Row } from \"react-bootstrap\";\n\n\nconst Header = (props) => {\n  return (\n    <div className=\"ml-xxl-n3 ml-xl-n3 ml-lg-n3\">\n      <Row className=\"d-flex flex-row justify-content-between align-items-center  mb-2\">\n        <Col className=\"d-flex flex-column flex-wrap-wrap align-content-center \">\n          <h4 className=\"fw-bold \">{props.HEADING}</h4>\n        </Col>\n       \n      </Row>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst DeleteModel = (props) => {\n  return (\n    <div>\n      <Modal show={props.DELETESTATE} onHide={props.ONCLICK} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.DELETETITLE}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{props.DESCRIPTION} ?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={props.YES}>\n            Yes\n          </Button>\n          <Button variant=\"secondary\" onClick={props.ONCLICK}>\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DeleteModel;\n","import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { Button, Col, Container, Row, Table } from \"react-bootstrap\";\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\nimport { FaSort } from \"react-icons/fa\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport ReactPaginate from \"react-paginate\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"./FilterComponent.css\";\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n\n    prepareRow,\n    page,\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetWidth: false,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n        <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: \"100%\" }}\n          >\n           <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={column.id}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: \"nowrap\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (!e.target.classList.contains('fa-sort') && column.render(\"Header\") !== \"ACTIONS\") {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render(\"Header\") === \"ACTIONS\" ? (\n                        <>{column.render(\"Header\")}</>\n                      ) : (\n                        <div>\n                          {column.render(\"Header\")}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={row.id}>\n                      {row.cells.map((cell) => (\n                        <td\n                          {...cell.getCellProps()}\n                          key={cell.column.id}\n                          className=\"text-secondary text-center \"\n                          style={{\n                            textOverflow: \"ellipsis\",\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            maxWidth: \"20ch\",\n                          }}\n                        >\n                          {cell.render(\"Cell\")}\n                        </td>\n                      ))}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? \"d-flex\" : \"d-none\"\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Page{\" \"}\n                <strong className=\"m-2\">\n                  {props.currentPage} of {props.totalPages}\n                </strong>\n              </span>\n              <Row>\n                <span className=\"m-1\">\n                  Items per page{\" \"}\n                  <strong className=\"m-2\">{props.itemsPerPage}</strong>\n                </span>\n              </Row>\n            </Col>\n            <Col className=\"d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={\"active\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                // variant=\"warning\"/\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                // variant=\"warning\"\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { MdDelete, MdRefresh } from \"react-icons/md\";\nimport axios from \"axios\";\nimport Header from \"../../components/BasicHeader\";\nimport Loader from \"../../pages/loginForms/loader/Loader\";\nimport {\n  useGetNewsTableQuery,\n  useDeleteNewsMutation,\n} from \"../../redux/features/api/NewsApi\";\nimport { toast } from \"react-toastify\";\nimport DeleteModel from \"../../components/DeleteModel\";\nimport Tablepagination from \"../../components/TablePaginationComponent\";\n\nconst News = () => {\n  const [data, setData] = useState([]);\n  const [lang, setLang] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [totalPages, setTotalPages] = useState(1);\n  const [idToDelete, setIdToDelete] = useState(\"\");\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState();\n  const {\n    data: newsTableData,\n    isLoading: tableLoading,\n    refetch,\n  } = useGetNewsTableQuery(currentPage);\n  const [deleteNewsApi] = useDeleteNewsMutation();\n  const [refreshLoading, setRefreshLoading] = useState(false);\n\n  useEffect(() => {\n    if (newsTableData && newsTableData.data) {\n      setData(newsTableData.data);\n      setTotalPages(newsTableData.pagination.totalPages);\n      setItemsPerPage(newsTableData.pagination.itemsPerPage);\n    }\n  }, [newsTableData]);\n\n  const deleteHandleClose = () => setDeleteShow(false);\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteNews = async () => {\n    try {\n      const response = await deleteNewsApi(idToDelete);\n      setDeleteShow(false);\n      setIdToDelete(\"\");\n      if (response?.data) {\n        toast.success(response.data.message, { autoClose: 1000 });\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!lang && !category) {\n      toast.error(\"Please select both language and category.\", {\n        autoClose: 2000,\n      });\n      return;\n    }\n\n    if (!lang) {\n      toast.error(\"Please select a language.\", { autoClose: 2000 });\n      return;\n    }\n\n    if (!category) {\n      toast.error(\"Please select a category.\", { autoClose: 2000 });\n      return;\n    }\n\n    setRefreshLoading(true);\n    await refetch();\n    setRefreshLoading(false);\n    try {\n      const response = await axios.get(\n        `https://train-info.onrender.com/news/addNewsInDB?category=${category}&lang=${lang}`\n      );\n      if (response?.data) {\n        console.log(lang);\n        console.log(category);\n        console.log(response);\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setLang(\"\");\n        setCategory(\"\");\n        window.location.reload(); \n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        setLang(\"\");\n        setCategory(\"\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault(); \n    await handleSubmit();\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSubmit(); \n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"ID\",\n      accessor: \"s_no\",\n    },\n    {\n      Header: \"Category\",\n      accessor: \"category\",\n      width: \"auto\",\n      minWidth: 100,\n    },\n    {\n      Header: \"Language\",\n      accessor: \"lang\",\n      width: \"auto\",\n      minWidth: 100,\n    },\n    {\n      Header: \"Title\",\n      accessor: \"title\",\n    },\n    {\n      Header: \"Image\",\n      accessor: \"image\",\n    },\n    {\n      Header: \"Published At\",\n      accessor: \"publishedAt\",\n    },\n    {\n      Header: \"ACTIONS\",\n      accessor: \"action\",\n      fixed: \"right\",\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Button\n              variant=\"danger\"\n              className=\"m-1\"\n              onClick={() => deleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      {!tableLoading ? (\n        <>\n          <Container fluid className=\"my-4\">\n            <Row>\n              <Col>\n                <Header\n                  HEADING=\" News\"\n                  headingClassName=\"text-center text-md-start m-md-4 m-xl-2\"\n                />\n              </Col>\n            </Row>\n            <hr className=\"bg-primary ml-xxl-n2 ml-xl-n2 ml-lg-n2\" />\n            <Row className=\"mb-3\">\n              <Col>\n              <Form onSubmit={handleFormSubmit} onKeyPress={handleKeyPress}>\n                  <Row className=\"mb-4 mt-4\">\n                    <Col xs={12} md={4} lg={3}>\n                      <Form.Group controlId=\"language\">\n                        <Form.Label\n                          className=\"text-dark\"\n                          style={{ fontWeight: \"bolder\" }}\n                        >\n                          Languages:\n                        </Form.Label>\n                        <Form.Select\n                          value={lang}\n                          onChange={(e) => setLang(e.target.value)}\n                          className=\"mb-2\"\n                        >\n                          <option value=\"\" disabled>\n                            Select Languages\n                          </option>\n                          <option value=\"ta\">Tamil</option>\n                          <option value=\"en\">English</option>\n                          <option value=\"te\">Telugu</option>\n                          <option value=\"hi\">Hindi</option>\n                        </Form.Select>\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={4} lg={3}>\n                      <Form.Group controlId=\"category\">\n                        <Form.Label\n                          className=\"text-dark\"\n                          style={{ fontWeight: \"bolder\" }}\n                        >\n                          Categories:\n                        </Form.Label>\n                        <Form.Select\n                          value={category}\n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"mb-2\"\n                        >\n                          <option value=\"\" disabled>\n                            Select Categories\n                          </option>\n                          <option value=\"general\">General</option>\n                          <option value=\"world\">World</option>\n                          <option value=\"nation\">Nation</option>\n                          <option value=\"business\">Business</option>\n                          <option value=\"technology\">Technology</option>\n                          <option value=\"entertainment\">Entertainment</option>\n                          <option value=\"sports\">Sports</option>\n                          <option value=\"science\">Science</option>\n                          <option value=\"health\">Health</option>\n                        </Form.Select>\n                      </Form.Group>\n                    </Col>\n                    <Col xs={12} md={4} lg={3} className=\" d-flex flex-column \">\n                      <Button\n                        style={{\n                          backgroundColor: \"#0077B2\",\n                          border: \"none\",\n                          marginTop: \"30px\",\n                          position: \"relative\",\n                        }}\n                        type=\"submit\"\n                        disabled={refreshLoading}\n                      >\n                        <MdRefresh\n                          size={25}\n                          style={{\n                            marginRight: \"0px\",\n                            animation: refreshLoading\n                              ? \"spin 1s linear infinite\"\n                              : \"none\",\n                          }}\n                          className=\"justify-content-center align-items-center \"\n                        />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n\n            <Row className=\"justify-content-center\">\n              <Col\n                xs={12}\n                lg={12}\n                xl={12}\n                xxl={12}\n                md={12}\n                className=\"table-responsive\"\n              >\n                <Tablepagination\n                  COLUMNS={COLUMNS}\n                  MOCK_DATA={data}\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  setCurrentPage={setCurrentPage}\n                  itemsPerPage={itemsPerPage}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <DeleteModel\n            DELETESTATE={deleteShow}\n            ONCLICK={deleteHandleClose}\n            YES={deleteNews}\n            DESCRIPTION=\"Confirm to Delete this News\"\n            DELETETITLE=\"News\"\n          />\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n\nexport default News;\n","import * as React from \"react\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\nimport { Container } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <Container className=\"vh-100 d-flex flex-column flex-wrap-wrap justify-content-center align-items-center\">\n    <RotatingLines\n      visible={true}\n      height=\"96\"\n      width=\"96\"\n      strokeColor=\"#0077B2\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      ariaLabel=\"rotating-lines-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n    <p className=\"\">Loading Please Wait</p>\n  </Container>\n);\n\nexport default Loader;\n"],"names":["props","_jsx","className","children","Row","Col","HEADING","_jsxs","Modal","show","DELETESTATE","onHide","ONCLICK","centered","Header","closeButton","Title","DELETETITLE","Body","DESCRIPTION","Footer","Button","variant","onClick","YES","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","Container","fluid","Table","striped","bordered","hover","responsive","style","width","map","headerGroup","_createElement","getHeaderGroupProps","key","id","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","getCellProps","textOverflow","overflow","maxWidth","colSpan","currentPage","totalPages","itemsPerPage","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","value","color","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","backgroundColor","border","disabled","BiLeftArrow","BiRightArrow","News","setData","useState","lang","setLang","category","setCategory","setTotalPages","idToDelete","setIdToDelete","deleteShow","setDeleteShow","setItemsPerPage","newsTableData","isLoading","tableLoading","refetch","useGetNewsTableQuery","deleteNewsApi","useDeleteNewsMutation","refreshLoading","setRefreshLoading","useEffect","pagination","handleSubmit","async","response","axios","get","_response$data","_response$error2","console","log","toast","success","message","autoClose","window","location","reload","error","accessor","minWidth","fixed","Cell","rowIdx","original","_id","MdDelete","Loader","headingClassName","Form","onSubmit","preventDefault","onKeyPress","xs","md","lg","Group","controlId","Label","fontWeight","Select","onChange","marginTop","position","type","MdRefresh","marginRight","animation","xl","xxl","Tablepagination","DeleteModel","deleteHandleClose","_response$error","RotatingLines","visible","height","strokeColor","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}
{"version":3,"file":"static/js/8654.6aed005e.chunk.js","mappings":"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","sources":["components/BasicButton.js","components/TextInput.js","pages/loginForms/LoginValidation.js","pages/loginForms/Login.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nconst BasicButton = (props) => {\n  const {\n    variant,\n    onClick,\n    label,\n    size,\n    icon,\n    className,\n    isLoading,\n    loaderVariant,\n    loaderSize,\n    type\n  } = props;\n  const buttonStyle = {\n    backgroundColor:\"#0077B2\",\n    borderColor: \"#0077B2\",\n    color:\"white\",\n  };\n  return (\n    <Button\n      style={buttonStyle}\n      variant={variant}\n      className={className}\n      size={size}\n      type={type}\n      onClick={onClick}\n      disabled={!isLoading ? false : true}\n    >\n      {!isLoading ? (\n        <>\n          {icon} {label}\n        </>\n      ) : (\n        <>\n          <Spinner\n            size={`${!loaderSize ? \"sm\" : loaderSize}`}\n            variant={`${!loaderVariant ? \"#0077B2\" : loaderVariant}`}\n          />\n        </>\n      )}\n    </Button>\n  );\n};\nexport default BasicButton;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nconst TextInput = (props) => {\n  const {\n    label,\n    name,\n    id,\n    type,\n    placeholder,\n    htmlFor,\n    lableClassName,\n    value,\n    onChange,\n    onBlur,\n    disabled,\n    className,\n    lg,\n    md,\n    xxl,\n    xl,\n    sm,\n    validation,\n    star,\n  } = props;\n  return (\n    <Form.Group>\n      <Form.Label htmlFor={htmlFor} className={lableClassName}>\n        {label}\n        <span className={`text-danger ${star === \"none\" ? `d-${star}` : \"\"}`}>\n          *\n        </span>\n      </Form.Label>\n      <Form.Control\n        name={name}\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        disabled={disabled}\n        className={className}\n        lg={lg}\n        md={md}\n        xxl={xxl}\n        xl={xl}\n        sm={sm}\n      />\n      {validation}\n    </Form.Group>\n  );\n};\nexport default TextInput;\n","import * as Yup from \"yup\";\n\nexport const LogAndRegSchema = Yup.object().shape({\n  email: Yup.string()\n    .transform((value) => value.trim())\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      \"Invalid email format\"\n    )\n    .required(\"Email is required\"),\n    \n    password: Yup.string()\n    .transform((value) => value.trim())\n    .required(\"Password is required \")\n    .min(8, \"Password should be at least 8 characters\"),\n    \n \n});\n","import React, { useState } from \"react\";\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\nimport { Formik } from \"formik\";\nimport { LogAndRegSchema } from \"./LoginValidation\";\nimport TextInput from \"../../components/TextInput\";\nimport { useLoginUserMutation } from \"../../redux/features/api/AuthApi\";\nimport { toast } from \"react-toastify\";\nimport BasicButton from \"../../components/BasicButton\";\nimport login from \"../../assets/images/loginlogo2.png\";\n\nconst Login = () => {\n  const [passwordIcon, setPasswordIcon] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useNavigate();\n  const [loginApi, { isLoading }] = useLoginUserMutation();\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const showPassword = () => {\n    let eye = document.getElementById(\"password\");\n    if (eye.type === \"password\") {\n      eye.type = \"text\";\n      setPasswordIcon(true);\n    } else {\n      eye.type = \"password\";\n      setPasswordIcon(false);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await loginApi({\n        email: email,\n        password: password,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        console.log(response);\n        history(\"/admin/dashboard\");\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        console.log(\"else part\");\n        console.log(response.error);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  };\n\n  return (\n    <Container\n      fluid\n      className=\"vh-100 w-100 d-flex flex-column justify-content-center align-items-center bg-white\"\n      style={{ overflow: \"hidden\" }}\n    >\n      <Row className=\"justify-content-center align-items-center\">\n        <Col\n          xs={12}\n          md={6}\n          lg={6}\n          xl={6}\n          className=\"justify-content-center align-items-center \"\n        >\n          <img\n            className=\"img-fluid d-none d-md-none d-sm-none d-lg-flex d-xl-flex d-xxl-flex d-lg-block ml-10 mt-md-4 justify-content-center align-items-center\"\n            src={login}\n            alt=\"Img\"\n            style={{ height: \"600px\", width: \"900px\" }}\n          />\n        </Col>\n\n        <Col\n          xs={12}\n          md={12}\n          lg={6}\n          xl={6}\n          className=\"d-flex flex-column justify-content-center align-items-center \"\n        >\n          <Row className=\"shadow p-4  bg-body rounded d-flex flex-column justify-content-center align-items-center\">\n            <Col className=\"d-flex flex-column justify-content-center align-items-center\">\n              <h5>Login</h5>\n              <p className=\"text-secondary text-noWarp\">\n                Welcome back! Please enter your details\n              </p>\n            </Col>\n            <Col>\n              <Formik\n                initialValues={initialValues}\n                validationSchema={LogAndRegSchema}\n                onSubmit={handleLogin}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                }) => (\n                  <Form\n                    className=\"d-flex flex-column justify-content-center\"\n                    onSubmit={handleFormSubmit}\n                  >\n                    <Col className=\"align-items-start\">\n                      <TextInput\n                        htmlFor=\"email\"\n                        label={\"Email\"}\n                        name=\"email\"\n                        type=\"email\"\n                        size=\"md\"\n                        id=\"email\"\n                        placeholder=\"Enter your email\"\n                        className={`form-control ${\n                          touched.email && errors.email ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                          setEmail(e.target.value.trim());\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.email && errors.email ? (\n                            <p className=\"text-danger\">{errors.email}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                    <Row className=\"d-flex mt-2 flex-row justify align-items-center\">\n                      <Col className=\"d-flex flex-row justify-end align-items-center\">\n                        <Form.Label\n                          htmlFor=\"password*\"\n                          className=\"d-flex flex-row justify-start\"\n                        >\n                          Password<span className=\"text-danger\">*</span>\n                        </Form.Label>\n                      </Col>\n                    </Row>\n                    <Row className=\"d-flex flex-row justify-between align-items-center\">\n                      <Col className=\"d-flex flex-row justify-content-end align-items-center\">\n                        <Form.Control\n                          name=\"password\"\n                          type=\"password\"\n                          size=\"md\"\n                          id=\"password\"\n                          placeholder=\"Enter your password\"\n                          className={`position-relative form-control ${\n                            touched.password && errors.password\n                              ? \"border-danger\"\n                              : \"\"\n                          }`}\n                          onChange={(e) => {\n                            setPassword(e.target.value.trim());\n                            handleChange(e);\n                          }}\n                          onBlur={handleBlur}\n                        />\n                        <div\n                          className=\"position-absolute m-2 pointer\"\n                          onClick={showPassword}\n                        >\n                          {password ? (\n                            <>\n                              {!passwordIcon ? (\n                                <AiOutlineEyeInvisible />\n                              ) : (\n                                <AiOutlineEye />\n                              )}\n                            </>\n                          ) : (\n                            \"\"\n                          )}\n                        </div>\n                      </Col>\n                    </Row>\n                    {touched.password && errors.password ? (\n                      <p className=\"text-danger\">{errors.password}</p>\n                    ) : (\n                      \"\"\n                    )}\n\n                    <BasicButton\n                      className=\"mt-3\"\n                      variant={\"warning\"}\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      onClick={handleLogin}\n                      isLoading={isLoading}\n                      label={\"Login\"}\n                    />\n                  </Form>\n                )}\n              </Formik>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["props","variant","onClick","label","size","icon","className","isLoading","loaderVariant","loaderSize","type","_jsx","Button","style","backgroundColor","borderColor","color","disabled","children","_Fragment","Spinner","concat","_jsxs","name","id","placeholder","htmlFor","lableClassName","value","onChange","onBlur","lg","md","xxl","xl","sm","validation","star","Form","Group","Label","Control","LogAndRegSchema","Yup","shape","email","transform","trim","matches","required","password","min","Login","passwordIcon","setPasswordIcon","useState","setEmail","setPassword","history","useNavigate","loginApi","useLoginUserMutation","showPassword","eye","document","getElementById","handleLogin","async","response","_response$data","_response$error","data","toast","success","message","autoClose","console","log","error","handleFormSubmit","e","preventDefault","Container","fluid","overflow","Row","Col","xs","src","login","alt","height","width","Formik","initialValues","validationSchema","onSubmit","_ref","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","TextInput","target","AiOutlineEye","AiOutlineEyeInvisible","BasicButton"],"sourceRoot":""}
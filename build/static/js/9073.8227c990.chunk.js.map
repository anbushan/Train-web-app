{"version":3,"file":"static/js/9073.8227c990.chunk.js","mappings":"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","sources":["components/BasicButton.js","components/TextInput.js","pages/Train/EditTrain.js","pages/Train/TrainValidation.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nconst BasicButton = (props) => {\n  const {\n    variant,\n    onClick,\n    label,\n    size,\n    icon,\n    className,\n    isLoading,\n    loaderVariant,\n    loaderSize,\n    type\n  } = props;\n  const buttonStyle = {\n    backgroundColor:\"#0077B2\",\n    borderColor: \"#0077B2\",\n    color:\"white\",\n  };\n  return (\n    <Button\n      style={buttonStyle}\n      variant={variant}\n      className={className}\n      size={size}\n      type={type}\n      onClick={onClick}\n      disabled={!isLoading ? false : true}\n    >\n      {!isLoading ? (\n        <>\n          {icon} {label}\n        </>\n      ) : (\n        <>\n          <Spinner\n            size={`${!loaderSize ? \"sm\" : loaderSize}`}\n            variant={`${!loaderVariant ? \"#0077B2\" : loaderVariant}`}\n          />\n        </>\n      )}\n    </Button>\n  );\n};\nexport default BasicButton;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nconst TextInput = (props) => {\n  const {\n    label,\n    name,\n    id,\n    type,\n    placeholder,\n    htmlFor,\n    lableClassName,\n    value,\n    onChange,\n    onBlur,\n    disabled,\n    className,\n    lg,\n    md,\n    xxl,\n    xl,\n    sm,\n    validation,\n    star,\n  } = props;\n  return (\n    <Form.Group>\n      <Form.Label htmlFor={htmlFor} className={lableClassName}>\n        {label}\n        <span className={`text-danger ${star === \"none\" ? `d-${star}` : \"\"}`}>\n          *\n        </span>\n      </Form.Label>\n      <Form.Control\n        name={name}\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        disabled={disabled}\n        className={className}\n        lg={lg}\n        md={md}\n        xxl={xxl}\n        xl={xl}\n        sm={sm}\n      />\n      {validation}\n    </Form.Group>\n  );\n};\nexport default TextInput;\n","\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport {  Col, Container, Form, Row } from \"react-bootstrap\";\nimport { TrainSchema } from \"../../pages/Train/TrainValidation\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport BasicButton from \"../../components/BasicButton\";\nimport TextInput from \"../../components/TextInput\";\nimport { useEditTrainMutation ,useGetTrainByIdQuery} from \"../../redux/features/api/TrainApi\";\n\nimport { toast } from \"react-toastify\";\nconst EditTrain = () => {\n  const navigate = useNavigate();\n  const [TrainNo, setTrainNo] = useState(\"\");\n  const [TrainName, setTrainName] = useState(\"\");\n  const [tamilTrainName, setTamilTrainName] = useState(\"\");\n  const [teluguTrainName, setTeluguTrainName] = useState(\"\");\n  const [kannadaTrainName, setkannadaTrainName] = useState(\"\");\n  const [hindiTrainName, setHindiTrainName] = useState(\"\");\n\n  const { id } = useParams();\n  const Id = id.startsWith(\":\") ? id.slice(1) : id;\n  const [EditTrainData, { isLoading }] = useEditTrainMutation();\n  const { data: TrainData } = useGetTrainByIdQuery(Id);\n \n\n  \n// console.log(id);\nconsole.log(TrainData);\n  const handleCancel = () => {\n    navigate(\"/admin/train\");\n  };\n  useEffect(() => {\n    if (TrainData && TrainData.data) {\n      setTrainNo(TrainData.data.TrainNo);\n      setTrainName(TrainData.data.TrainName);\n      setTamilTrainName(TrainData.data.tamilTrainName);\n      setTeluguTrainName(TrainData.data.teluguTrainName);\n      setkannadaTrainName(TrainData.data.kannadaTrainName);\n      setHindiTrainName(TrainData.data.hindiTrainName);\n     \n     \n    }\n  }, [TrainData]);\n  // console.log(TrainData);\n  const initialValues = {\n    TrainNo: \"\",\n    TrainName: \"\",\n    tamilTrainName: \"\",\n    teluguTrainName: \"\",\n    kannadaTrainName: \"\",\n    hindiTrainName: \"\",\n   \n  };\n  const handleEditData = async () => {\n    try {\n      const response = await EditTrainData({\n        id: Id,\n        data: {\n          TrainNo: TrainNo,\n          TrainName: TrainName,\n          tamilTrainName: tamilTrainName,\n          teluguTrainName: teluguTrainName,\n          kannadaTrainName: kannadaTrainName,\n          hindiTrainName: hindiTrainName,\n          \n         \n        },\n      });\n      \n      console.log(response);\n    \n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        console.log(response);\n        navigate(\"/admin/train\");\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        console.log(\"else part\");\n        console.log(response.error);\n       }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <Container fluid>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={TrainSchema}\n          onSubmit={handleEditData}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <>\n              <Form>\n              <Row className=\"d-flex flex-row justify-content-between align-items-center mt-3\">\n                  <Col className=\"d-flex justify-content-start mb-3\">\n                    <h4 onClick={handleCancel}>\n                      <AiOutlineArrowLeft />\n                    </h4>\n                    <h4>Edit Train</h4>\n                  </Col>\n                  <Col className=\"d-sm-none d-none d-md-none d-lg-flex d-xxl-flex d-xl-flex flex-row justify-content-end align-items-center\">\n                 <BasicButton\n                      className=\"m-1\"\n                      variant=\"secondary\"\n                      onClick={handleCancel}\n                      label=\"Cancel\"\n                    />              \n                     <BasicButton\n                      className=\"m-2 d-flex justify-content-start align-items-center text-light\"\n                      variant={\"warning\"}\n                      type=\"button\"\n                      disabled={isSubmitting}\n                      onClick={\n                        TrainNo === \"\" ||\n                        TrainName === \"\" ||\n                        tamilTrainName === \"\" ||\n                        teluguTrainName === \"\" ||\n                        kannadaTrainName === \"\" ||\n                        hindiTrainName === \"\" ||\n                       \n                        (touched.TrainNo && errors.TrainNo) ||\n                        (touched.TrainName && errors.TrainName) ||\n                        (touched.tamilTrainName && errors.tamilTrainName) ||\n                        (touched.teluguTrainName && errors.teluguTrainName) ||\n                        (touched.kannadaTrainName && errors.kannadaTrainName) ||\n                        (touched.hindiTrainName && errors.hindiTrainName) \n                       \n                          ? handleSubmit\n                          : handleEditData\n                      }\n                      isLoading={isLoading}\n                      label={\"Update\"}\n                    />\n                            \n                          </Col>  \n                         </Row>            \n                        \n                <Row className=\"d-flex flex-wrap flex-lg-row flex-xxl-row flex-xl-row flex-column flex-md-column flex-sm-column  mt-4\">\n                  <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">English:</h4>\n                \n                   \n                    \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"Train No\"\n                        type=\"\"\n                        name=\"TrainNo\"\n                        value={TrainNo}\n                        \n                        className={`form-control ${\n                          touched.TrainNo && errors.TrainNo ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTrainNo(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.TrainNo && errors.TrainNo ? (\n                            <p className=\"text-danger\">{errors.TrainNo}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"Train Name\"\n                        type=\"\"\n                        name=\"TrainName\"\n                        value={TrainName}\n                        className={`form-control ${\n                          touched.TrainName && errors.TrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.TrainName && errors.TrainName ? (\n                            <p className=\"text-danger\">{errors.TrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n\n\n                    <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Tamil:</h4>\n                \n                   \n                    \n                 \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"ரயில் பெயர்\"\n                        type=\"\"\n                        name=\"tamilTrainName\"\n                        value={tamilTrainName}\n                        className={`form-control ${\n                          touched.tamilTrainName && errors.tamilTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTamilTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.tamilTrainName && errors.tamilTrainName ? (\n                            <p className=\"text-danger\">{errors.tamilTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n                </Row>\n\n\n\n\n\n\n\n\n\n\n                <Row className=\"d-flex flex-wrap flex-lg-row flex-xxl-row flex-xl-row flex-column flex-md-column flex-sm-column  mt-4\">\n                <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Hindi:</h4>\n                \n                   \n                 \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"ट्रेन का नाम\"\n                        type=\"\"\n                        name=\"hindiTrainName\"\n                        value={hindiTrainName}\n                        className={`form-control ${\n                          touched.hindiTrainName && errors.hindiTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setHindiTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.hindiTrainName && errors.hindiTrainName ? (\n                            <p className=\"text-danger\">{errors.hindiTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n                 \n\n                 \n                    </Col>\n\n                    <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Telugu:</h4>\n                \n                   \n                    \n                   \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"రైలు పేరు\"\n                        type=\"\"\n                        name=\"teluguTrainName\"\n                        value={teluguTrainName}\n                        className={`form-control ${\n                          touched.teluguTrainName && errors.teluguTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setTeluguTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.teluguTrainName && errors.teluguTrainName ? (\n                            <p className=\"text-danger\">{errors.teluguTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n                </Row>\n\n\n\n\n\n\n\n                <Row className=\"d-flex flex-wrap flex-lg-row flex-xxl-row flex-xl-row flex-column flex-md-column flex-sm-column  mt-4\">\n                  <Col className=\"m-1 p-4 d-flex flex-wrap flex-column shadow rounded\">\n                  <h4 className=\"mb-4\">Kannada:</h4>\n                \n                   \n                    \n                   \n                    <Col\n                      className=\"m-2\"\n                      lg=\"6\"\n                      xxl=\"6\"\n                      xl=\"12\"\n                      md=\"12\"\n                      sm=\"12\"\n                    >\n                      <TextInput\n                        label=\"ರೈಲು ಹೆಸರು\"\n                        type=\"\"\n                        name=\"kannadaTrainName\"\n                        value={kannadaTrainName}\n                        className={`form-control ${\n                          touched.kannadaTrainName && errors.kannadaTrainName ? \"is-invalid\" : \"\"\n                        }`}\n                        onChange={(e) => {\n                            setkannadaTrainName(e.target.value);\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        validation={\n                          touched.kannadaTrainName && errors.kannadaTrainName ? (\n                            <p className=\"text-danger\">{errors.kannadaTrainName}</p>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                      />\n                    </Col>\n                \n\n\n                 \n\n                 \n                    </Col>\n\n\n                               </Row>\n                \n                     <Row className=\" mt-3  d-sm-flex d-flex d-md-flex d-lg-none d-xxl-none d-xl-none flex-row justify-content-between align-items-center mt-3\">  \n                    <Col className=\"d-flex justify-content-start align-items-center\">                 \n                    <BasicButton\n                      className=\"m-1\"\n                      variant=\"secondary\"\n                      onClick={handleCancel}\n                      label=\"Cancel\"\n                    />\n                  </Col>\n                  \n                 <Col className=\"d-flex justify-content-end align-items-center\">            \n                 <BasicButton\n                      className=\"m-2 d-flex justify-content-start align-items-center text-light\"\n                      variant={\"warning\"}\n                      type=\"button\"\n                      disabled={isSubmitting}\n                      onClick={\n                        TrainNo === \"\" ||\n                        TrainName === \"\" ||\n                        tamilTrainName === \"\" ||\n                        teluguTrainName === \"\" ||\n                        kannadaTrainName === \"\" ||\n                        hindiTrainName === \"\" ||\n                       \n                        (touched.TrainNo && errors.TrainNo) ||\n                        (touched.TrainName && errors.TrainName) ||\n                        (touched.tamilTrainName && errors.tamilTrainName) ||\n                        (touched.teluguTrainName && errors.teluguTrainName) ||\n                        (touched.kannadaTrainName && errors.kannadaTrainName) ||\n                        (touched.hindiTrainName && errors.hindiTrainName) \n                       \n                          ? handleSubmit\n                          : handleEditData\n                      }\n                      isLoading={isLoading}\n                      label={\"Update\"}\n                    />\n                  </Col>\n                </Row>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Container>\n    </div>\n  );\n};\n\nexport default EditTrain;\n","import * as Yup from \"yup\";\n\nexport const TrainSchema = Yup.object().shape({\n    TrainNo: Yup.string()\n        .required(\"Train number is required.\")\n        .matches(/^\\d{5}$/, \"Train number must contain exactly five digits.\"),\n\n    TrainName: Yup.string().required(\"Train name is required.\"),\n\n    tamilTrainName: Yup.string().required(\"ரயிலின் பெயர் கண்டிப்பாக இருக்க வேண்டும்.\"),\n\n    teluguTrainName: Yup.string().required(\"రైలు పేరు తప్పనిసరిగా ఉండాలి.\"),\n\n    kannadaTrainName: Yup.string().required(\"ರೈಲಿನ ಹೆಸರು ಕಡ್ಡಾಯವಾಗಿರಬೇಕು.\"),\n\n    hindiTrainName: Yup.string().required(\"ट्रेन का नाम आवश्यक है.\"),\n});\n\n"],"names":["props","variant","onClick","label","size","icon","className","isLoading","loaderVariant","loaderSize","type","_jsx","Button","style","backgroundColor","borderColor","color","disabled","children","_Fragment","Spinner","concat","_jsxs","name","id","placeholder","htmlFor","lableClassName","value","onChange","onBlur","lg","md","xxl","xl","sm","validation","star","Form","Group","Label","Control","EditTrain","navigate","useNavigate","TrainNo","setTrainNo","useState","TrainName","setTrainName","tamilTrainName","setTamilTrainName","teluguTrainName","setTeluguTrainName","kannadaTrainName","setkannadaTrainName","hindiTrainName","setHindiTrainName","useParams","Id","startsWith","slice","EditTrainData","useEditTrainMutation","data","TrainData","useGetTrainByIdQuery","console","log","handleCancel","useEffect","handleEditData","async","response","_response$data","_response$error","toast","success","message","autoClose","error","Container","fluid","Formik","initialValues","validationSchema","TrainSchema","onSubmit","_ref","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Row","Col","AiOutlineArrowLeft","BasicButton","TextInput","e","target","Yup","shape","required","matches"],"sourceRoot":""}
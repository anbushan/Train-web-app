{"version":3,"file":"static/js/3523.97290f4e.chunk.js","mappings":"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","sources":["components/TablePaginationComponent.js","pages/Notification/Individual/Individual.js","pages/loginForms/loader/Loader.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { Button, Col, Container, Row, Table } from \"react-bootstrap\";\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\nimport { FaSort } from \"react-icons/fa\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport ReactPaginate from \"react-paginate\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"./FilterComponent.css\";\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n\n    prepareRow,\n    page,\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetWidth: false,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n        <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: \"100%\" }}\n          >\n           <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={column.id}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: \"nowrap\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (!e.target.classList.contains('fa-sort') && column.render(\"Header\") !== \"ACTIONS\") {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render(\"Header\") === \"ACTIONS\" ? (\n                        <>{column.render(\"Header\")}</>\n                      ) : (\n                        <div>\n                          {column.render(\"Header\")}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={row.id}>\n                      {row.cells.map((cell) => (\n                        <td\n                          {...cell.getCellProps()}\n                          key={cell.column.id}\n                          className=\"text-secondary text-center \"\n                          style={{\n                            textOverflow: \"ellipsis\",\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            maxWidth: \"20ch\",\n                          }}\n                        >\n                          {cell.render(\"Cell\")}\n                        </td>\n                      ))}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? \"d-flex\" : \"d-none\"\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Page{\" \"}\n                <strong className=\"m-2\">\n                  {props.currentPage} of {props.totalPages}\n                </strong>\n              </span>\n              <Row>\n                <span className=\"m-1\">\n                  Items per page{\" \"}\n                  <strong className=\"m-2\">{props.itemsPerPage}</strong>\n                </span>\n              </Row>\n            </Col>\n            <Col className=\"d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={\"active\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                // variant=\"warning\"/\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                // variant=\"warning\"\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport BasicTable from \".././../../components/TablePaginationComponent\";\nimport Loader from \"../../loginForms/loader/Loader\";\nimport {useGetNumberQuery} from \"../../../redux/features/api/WithdrawRequestApi\";\nimport { useGetIndividualNotificationQuery ,useAddIndividualNotificationMutation} from \".././../../redux/features/api/IndividualNotificationApi\";\nimport { toast } from \"react-toastify\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { BsSearch, BsX } from \"react-icons/bs\";\n\n\nconst IndividualNotification = () => {\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState();\n  const [number, setNumber] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [file, setFile] = useState(null); \n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\"); \n  const [numberOptions, setNumberOptions] = useState([]);\n  const [sendRequestShow, setSendRequestShow] = useState(false);\n  const [addIndividualNotification] = useAddIndividualNotificationMutation();\n  const { data: NumberData } = useGetNumberQuery();\n  const { data: getIndividualNotificationData, isLoading ,refetch} = useGetIndividualNotificationQuery({ page: currentPage, search: searchTerm });\n\n  useEffect(() => {\n    if (getIndividualNotificationData && getIndividualNotificationData.data) {\n      setData(getIndividualNotificationData.data);\n      setTotalPages(getIndividualNotificationData.pagination.totalPages);\n      setCurrentPage(currentPage);\n      setItemsPerPage(getIndividualNotificationData.pagination.itemsPerPage);\n    }\n  }, [getIndividualNotificationData, currentPage]);\n\n \n\n  useEffect(() => {\n    if (NumberData && NumberData.data) {\n      setNumberOptions(NumberData.data);\n    }\n  }, [NumberData]);\n\n  const handleSendRequestClose = () => {\n    setSendRequestShow(false);\n  };\n\n  const handleClear = () => {\n    setSearchInput(\"\");\n    setSearchTerm(\"\");\n  };\n\n  const handleSearch = () => {\n    setSearchTerm(searchInput);\n    refetch({ page: currentPage, search: searchInput });\n  };\n\n  \n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  const handleSendRequest = async () => {\n    try {\n      const response = await addIndividualNotification({\n        phoneNumber:number,\n        title: title,\n        body: body,\n        image:file,\n      });\n\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setSendRequestShow(false);\n        navigate(\"/admin/individual\");\n        setNumber(\"\")\n        setTitle(\"\")\n        setBody(\"\")\n        setFile(\"\")\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        console.log(\"else part\");\n        console.log(response.error);\n        setNumber(\"\")\n        setTitle(\"\")\n        setBody(\"\")\n        setFile(\"\")\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]); \n  };\n  const COLUMNS = [\n    {\n      Header: \"ID\",\n      accessor:\"s_no\",\n      minWidth: 10,\n    },\n    {\n      Header: \"Phone Number\",\n      accessor: \"phoneNumber\",\n    },\n    {\n      Header: \"Title\",\n      accessor: \"title\",\n    },\n    {\n      Header: \"Body\",\n      accessor: \"body\",\n    },\n    {\n      Header: \"Image\",\n      accessor: \"image\",\n      Cell: (props) => {\n        const imageUrl = props.value; \n        return <img src={imageUrl} alt=\"img\" style={{ maxWidth: '50px', maxHeight: '50px' }} />;\n      },\n    },\n    {\n      Header: \"Created Date\",\n      accessor: \"createdAt.date\",\n      width: \"auto\",\n      minWidth: 100,\n    },\n    {\n      Header: \"Created Time\",\n      accessor: \"createdAt.time\",\n      width: \"auto\",\n      minWidth: 100,\n    },\n  ];\n  \n  return (\n    <>\n      {!isLoading ? (\n        <Container fluid className=\"my-4\">\n          <Row>\n          <Col className=\"d-flex flex-row justify-content-between mt-1\">\n                <h4 className=\"fw-bold \"> Individual Notification</h4>\n                <div>\n                  <Button\n                    style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                    className=\"p-2 m-1\"\n                    onClick={() => setSendRequestShow(true)}\n                   \n                  >\n                    <IoIosSend size={20} /><span className=\"d-none d-md-inline\"> Individual Notification</span>\n                  </Button>\n                </div>\n              </Col>\n              <hr className=\"bg-primary mt-4\" />\n              <Row className=\"d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n            <Col className=\"my-4 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <BsSearch />\n                </span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search notification...\"\n                  className=\"form-control\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                />\n                {searchInput && (\n                  <span className=\"input-group-text\" onClick={handleClear}>\n                    <BsX />\n                  </span>\n                )}\n              </div>\n            </Col>\n            <Col  className=\"d-flex flex-column text-center my-4\"\n            xxl={2}\n            xl={2}\n            lg={2}\n            sm={3}\n            md={3}>\n              <Button style={{ backgroundColor: \"#0077B2\", border: \"none\" }} onClick={handleSearch} className=\"\">Search</Button>\n            </Col>\n          </Row>\n          </Row>\n        \n          <Row className=\"justify-content-center\">\n            <Col xs={12} lg={12} xl={12} xxl={12} md={12} className=\"table-responsive\">\n              <BasicTable\n                COLUMNS={COLUMNS}\n                MOCK_DATA={data}\n                currentPage={currentPage}\n                totalPages={totalPages}\n                setCurrentPage={setCurrentPage}\n                itemsPerPage={itemsPerPage}\n              />\n            </Col>\n          </Row>\n          \n          <Modal\n            show={sendRequestShow}\n            onHide={handleSendRequestClose}\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Send Request</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Phone Number </Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={number}\n                    onChange={(e) => setNumber(e.target.value)}\n                  >\n                    <option value=\"\">Select an Number</option>\n                    {numberOptions.map((option, index) => (\n                      <option key={index} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicUPI\">\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicWithdrawAmount\">\n                  <Form.Label>Body</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Body\"\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicFile\" className=\"mt-2\">\n                  <Form.Label>Upload Image</Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={handleFileChange}\n                  />\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleSendRequestClose}>\n                Cancel\n              </Button>\n              <Button\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={handleSendRequest}\n              >\n                Send\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default IndividualNotification;\n","import * as React from \"react\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\nimport { Container } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <Container className=\"vh-100 d-flex flex-column flex-wrap-wrap justify-content-center align-items-center\">\n    <RotatingLines\n      visible={true}\n      height=\"96\"\n      width=\"96\"\n      strokeColor=\"#0077B2\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      ariaLabel=\"rotating-lines-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n    <p className=\"\">Loading Please Wait</p>\n  </Container>\n);\n\nexport default Loader;\n"],"names":["props","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","_jsx","children","Container","fluid","className","_jsxs","Row","Table","striped","bordered","hover","responsive","style","width","map","headerGroup","_createElement","getHeaderGroupProps","key","id","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","getCellProps","textOverflow","overflow","maxWidth","colSpan","Col","currentPage","totalPages","itemsPerPage","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","value","color","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","backgroundColor","border","disabled","BiLeftArrow","BiRightArrow","IndividualNotification","navigate","useNavigate","setData","useState","setTotalPages","setItemsPerPage","number","setNumber","title","setTitle","body","setBody","file","setFile","searchTerm","setSearchTerm","searchInput","setSearchInput","numberOptions","setNumberOptions","sendRequestShow","setSendRequestShow","addIndividualNotification","useAddIndividualNotificationMutation","NumberData","useGetNumberQuery","getIndividualNotificationData","isLoading","refetch","useGetIndividualNotificationQuery","search","useEffect","pagination","handleSendRequestClose","handleSearch","Header","accessor","minWidth","Cell","imageUrl","src","alt","maxHeight","Loader","IoIosSend","xxl","xl","lg","sm","md","BsSearch","type","placeholder","onChange","onKeyPress","handleClear","BsX","xs","BasicTable","Modal","show","onHide","centered","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","option","index","files","Footer","variant","async","response","phoneNumber","image","_response$data","_response$error","toast","success","message","autoClose","error","console","log","RotatingLines","visible","height","strokeColor","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}
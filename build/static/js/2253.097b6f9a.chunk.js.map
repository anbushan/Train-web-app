{"version":3,"file":"static/js/2253.097b6f9a.chunk.js","mappings":"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","sources":["components/BasicHeader.js","components/TablePaginationComponent.js","pages/Userlist/UserList.js","pages/loginForms/loader/Loader.js"],"sourcesContent":["import React from \"react\";\nimport {  Col, Row } from \"react-bootstrap\";\n\n\nconst Header = (props) => {\n  return (\n    <div className=\"ml-xxl-n3 ml-xl-n3 ml-lg-n3\">\n      <Row className=\"d-flex flex-row justify-content-between align-items-center  mb-2\">\n        <Col className=\"d-flex flex-column flex-wrap-wrap align-content-center \">\n          <h4 className=\"fw-bold \">{props.HEADING}</h4>\n        </Col>\n       \n      </Row>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { Button, Col, Container, Row, Table } from \"react-bootstrap\";\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\nimport { FaSort } from \"react-icons/fa\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport ReactPaginate from \"react-paginate\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"./FilterComponent.css\";\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n\n    prepareRow,\n    page,\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetWidth: false,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n        <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: \"100%\" }}\n          >\n           <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={column.id}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: \"nowrap\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (!e.target.classList.contains('fa-sort') && column.render(\"Header\") !== \"ACTIONS\") {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render(\"Header\") === \"ACTIONS\" ? (\n                        <>{column.render(\"Header\")}</>\n                      ) : (\n                        <div>\n                          {column.render(\"Header\")}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={row.id}>\n                      {row.cells.map((cell) => (\n                        <td\n                          {...cell.getCellProps()}\n                          key={cell.column.id}\n                          className=\"text-secondary text-center \"\n                          style={{\n                            textOverflow: \"ellipsis\",\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            maxWidth: \"20ch\",\n                          }}\n                        >\n                          {cell.render(\"Cell\")}\n                        </td>\n                      ))}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? \"d-flex\" : \"d-none\"\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Page{\" \"}\n                <strong className=\"m-2\">\n                  {props.currentPage} of {props.totalPages}\n                </strong>\n              </span>\n              <Row>\n                <span className=\"m-1\">\n                  Items per page{\" \"}\n                  <strong className=\"m-2\">{props.itemsPerPage}</strong>\n                </span>\n              </Row>\n            </Col>\n            <Col className=\"d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={\"active\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                // variant=\"warning\"/\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                // variant=\"warning\"\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport { BsSearch, BsX } from \"react-icons/bs\"; \nimport BasicTable from \"../../components/TablePaginationComponent\";\nimport Header from \"../../components/BasicHeader\";\nimport Loader from \"../loginForms/loader/Loader\";\nimport { useGetUserListQuery } from \"../../redux/features/api/UserListApi\";\n\nconst UserList = () => {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState();\n\n  const [searchInput, setSearchInput] = useState(\"\"); \n\n  const { data: getUserlistData, isLoading, refetch } = useGetUserListQuery({ page: currentPage, search: searchTerm });\n\n  useEffect(() => {\n    if (getUserlistData && getUserlistData.data) {\n      setData(getUserlistData.data);\n      setTotalPages(getUserlistData.pagination.totalPages);\n      setCurrentPage(currentPage);\n      setItemsPerPage(getUserlistData.pagination.itemsPerPage);\n\n    }\n  }, [getUserlistData, currentPage]);\n\n  const handleSearch = () => {\n    setSearchTerm(searchInput);\n    refetch({ page: currentPage, search: searchInput });\n  };\n\n  const handleClear = () => {\n    setSearchInput(\"\");\n    setSearchTerm(\"\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"ID\",\n      accessor:\"s_no\",\n      minWidth: 10,\n    },\n    {\n      Header: \"Phone Number\",\n      accessor: \"phoneNumber\",\n    },\n    {\n      Header: \"Referral ID\",\n      accessor: \"referralId\",\n    },\n    {\n      Header: \"Created At\",\n      accessor: \"createdAt\",\n    },\n  ];\n\n  return (\n    <>\n      {!isLoading ? (\n        <Container fluid className=\"my-4\">\n          <Row>\n            <Col>\n              <Header\n                HEADING=\"User List\"\n                headingClassName=\"text-center text-md-start m-md-4 m-xl-2\"\n              />\n            </Col>\n          </Row>\n          <hr className=\"bg-primary ml-xxl-n2 ml-xl-n2 ml-lg-n2 \" />\n          <Row className=\"d-flex  flex-lg-row flex-column flex-xxl-row flex-xl-row flex-sm-column flex-md-row\">\n            <Col className=\"my-4 mx-2\" xxl={3} xl={3} lg={3} sm={6} md={6}>\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <BsSearch />\n                </span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search UserList...\"\n                  className=\"form-control\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  onKeyPress={handleKeyPress} \n                />\n                {searchInput && (\n                  <span className=\"input-group-text\" onClick={handleClear}>\n                    <BsX />\n                  </span>\n                )}\n              </div>\n            </Col>\n            <Col  className=\"d-flex flex-column text-center my-4\"\n            xxl={2}\n            xl={2}\n            lg={2}\n            sm={3}\n            md={3}>\n              <Button style={{ backgroundColor: \"#0077B2\", border: \"none\" }} onClick={handleSearch} className=\"\">Search</Button>\n            </Col>\n          </Row>\n\n          <Row className=\"d-flex flex-column align-items-center justift-content-center\">\n            <Col xs={12} lg={12} xl={12} xxl={12} md={12} className=\"table-responsive\">\n              <BasicTable\n                COLUMNS={COLUMNS}\n                MOCK_DATA={data}\n                currentPage={currentPage}\n                totalPages={totalPages}\n                setCurrentPage={setCurrentPage}\n                itemsPerPage={itemsPerPage}\n             \n              />\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default UserList;\n","import * as React from \"react\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\nimport { Container } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <Container className=\"vh-100 d-flex flex-column flex-wrap-wrap justify-content-center align-items-center\">\n    <RotatingLines\n      visible={true}\n      height=\"96\"\n      width=\"96\"\n      strokeColor=\"#0077B2\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      ariaLabel=\"rotating-lines-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n    <p className=\"\">Loading Please Wait</p>\n  </Container>\n);\n\nexport default Loader;\n"],"names":["props","_jsx","className","children","Row","Col","HEADING","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","Container","fluid","_jsxs","Table","striped","bordered","hover","responsive","style","width","map","headerGroup","_createElement","getHeaderGroupProps","key","id","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","onClick","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","getCellProps","textOverflow","overflow","maxWidth","colSpan","currentPage","totalPages","itemsPerPage","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","value","color","size","AiFillLeftCircle","nextLabel","AiFillRightCircle","Button","backgroundColor","border","disabled","BiLeftArrow","BiRightArrow","UserList","setData","useState","searchTerm","setSearchTerm","setTotalPages","setItemsPerPage","searchInput","setSearchInput","getUserlistData","isLoading","refetch","useGetUserListQuery","search","useEffect","pagination","handleSearch","Loader","Header","headingClassName","xxl","xl","lg","sm","md","BsSearch","type","placeholder","onChange","onKeyPress","handleClear","BsX","xs","BasicTable","accessor","minWidth","RotatingLines","visible","height","strokeColor","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}
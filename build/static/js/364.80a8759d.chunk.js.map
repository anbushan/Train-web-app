{"version":3,"file":"static/js/364.80a8759d.chunk.js","mappings":"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","sources":["components/DeleteModel.js","components/Header.js","components/TablePaginationComponent.js","pages/LocalTrain/LocalTrain.js","pages/loginForms/loader/Loader.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst DeleteModel = (props) => {\n  return (\n    <div>\n      <Modal show={props.DELETESTATE} onHide={props.ONCLICK} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.DELETETITLE}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{props.DESCRIPTION} ?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={props.YES}>\n            Yes\n          </Button>\n          <Button variant=\"secondary\" onClick={props.ONCLICK}>\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DeleteModel;\n","import React from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FaPlus } from \"react-icons/fa6\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"ml-xxl-n3 ml-xl-n3 ml-lg-n3\">\n      <Row className=\"d-flex flex-row justify-content-between align-items-center  mb-2\">\n        <Col className=\"d-flex flex-column flex-wrap-wrap align-content-center \">\n          <h4 className=\"fw-bold \">{props.HEADING}</h4>\n        </Col>\n        <Col className=\"d-flex flex-row flex-wrap-wrap justify-content-end align-items-center mr-lg-4 mr-xxl-4 mr-xl-4\">\n          <Button\n            style={{backgroundColor:\"#0077B2\",border:\"none\"}}\n            className=\"d-lg-none d-xxl-none d-flex d-sm-flex d-md-flex rounded fw-bold \"\n            onClick={props.ONCLICK}\n          >\n            <FaPlus size={18} color=\"white\" className=\" fw-bold\" />\n          </Button>\n          <Button\n            style={{backgroundColor:\"#0077B2\",border:\"none\"}}\n            className=\"d-lg-block d-xxl-block d-none d-sm-none rounded fw-bold text-light\"\n            onClick={props.ONCLICK}\n          >\n            <FaPlus size={18} className=\"mr-2 fw-bold mx-1\" />\n            {props.BUTTON_NAME}\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport { Button, Col, Container, Row, Table } from \"react-bootstrap\";\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\nimport { FaSort } from \"react-icons/fa\";\nimport { AiFillLeftCircle, AiFillRightCircle } from \"react-icons/ai\";\nimport ReactPaginate from \"react-paginate\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"./FilterComponent.css\";\n\nconst BasicTable = (props) => {\n  const columns = useMemo(() => props.COLUMNS, [props.COLUMNS]);\n  const data = useMemo(() => props.MOCK_DATA || [], [props.MOCK_DATA]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n\n    prepareRow,\n    page,\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetWidth: false,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div>\n      <Container fluid className=\"ml-xxl-n4 ml-xl-n4 ml-lg-n4\">\n        <Row>\n        <Table\n            className=\"justify-content-center align-items-center\"\n            striped\n            bordered\n            hover\n            {...getTableProps()}\n            responsive={true}\n            style={{ width: \"100%\" }}\n          >\n           <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps()}\n                      key={column.id}\n                      className=\"text-center text-dark\"\n                      style={{\n                        width: `${column.width}px`,\n                        whiteSpace: \"nowrap\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                      onClick={(e) => {\n                        // Check if the click was not on the sort icon and if the column is not \"ACTIONS\"\n                        if (!e.target.classList.contains('fa-sort') && column.render(\"Header\") !== \"ACTIONS\") {\n                          // Change sorting on a single tap\n                          column.toggleSortBy(!column.isSortedDesc);\n                        }\n                      }}\n                    >\n                      {column.render(\"Header\") === \"ACTIONS\" ? (\n                        <>{column.render(\"Header\")}</>\n                      ) : (\n                        <div>\n                          {column.render(\"Header\")}\n                          <FaSort className=\"mx-2\" />\n                        </div>\n                      )}\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.length > 0 ? (\n                page.map((row) => {\n                  prepareRow(row);\n                  return (\n                    <tr {...row.getRowProps()} key={row.id}>\n                      {row.cells.map((cell) => (\n                        <td\n                          {...cell.getCellProps()}\n                          key={cell.column.id}\n                          className=\"text-secondary text-center \"\n                          style={{\n                            textOverflow: \"ellipsis\",\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            maxWidth: \"20ch\",\n                          }}\n                        >\n                          {cell.render(\"Cell\")}\n                        </td>\n                      ))}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td\n                    colSpan={columns.length}\n                    className=\"text-center text-dark\"\n                  >\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <Col\n            className={`${\n              page.length > 0 ? \"d-flex\" : \"d-none\"\n            } flex-row justify-content-center align-items-center`}\n          >\n            <Col className=\"d-flex justify-content-start align-items-center flex-wrap\">\n              <span className=\"m-1\">\n                Page{\" \"}\n                <strong className=\"m-2\">\n                  {props.currentPage} of {props.totalPages}\n                </strong>\n              </span>\n              <Row>\n                <span className=\"m-1\">\n                  Items per page{\" \"}\n                  <strong className=\"m-2\">{props.itemsPerPage}</strong>\n                </span>\n              </Row>\n            </Col>\n            <Col className=\"d-none d-sm-none d-md-none d-xxl-flex d-xl-flex d-lg-flex justify-content-end align-items-center\">\n              <ReactPaginate\n                breakLabel=\"...\"\n                onPageChange={(selectedPage) =>\n                  props.setCurrentPage(selectedPage.selected + 1)\n                }\n                pageRangeDisplayed={5}\n                pageCount={props.totalPages}\n                renderOnZeroPageCount={null}\n                activeClassName={\"active\"}\n                pageClassName={\"page-item\"}\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                previousLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillLeftCircle />\n                  </IconContext.Provider>\n                }\n                nextLabel={\n                  <IconContext.Provider\n                    value={{ color: \"#0077B2\", size: \"28px\" }}\n                  >\n                    <AiFillRightCircle />\n                  </IconContext.Provider>\n                }\n              />\n            </Col>\n            <Col className=\"d-flex d-sm-flex d-md-flex d-xxl-none d-xl-none d-lg-none justify-content-end align-items-center\">\n              <Button\n                // variant=\"warning\"/\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}\n                disabled={props.currentPage === 1}\n                className=\"m-2\"\n              >\n                <BiLeftArrow size={14} />\n              </Button>\n              <Button\n                // variant=\"warning\"\n                style={{ backgroundColor: \"#0077B2\", border: \"none\" }}\n                onClick={() => {\n                  props.setCurrentPage(props.currentPage + 1);\n                }}\n                disabled={props.currentPage === props.totalPages}\n              >\n                <BiRightArrow size={14} />\n              </Button>\n            </Col>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\nexport default BasicTable;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { MdDelete } from \"react-icons/md\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BasicTable from \"../../components/TablePaginationComponent\";\nimport Header from \"../../components/Header\";\nimport {\n  useGetChennaiLocalSearchQuery,\n  useDeleteLocalTrainMutation,\n} from \"../../redux/features/api/LocalTrainApi\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"../../pages/loginForms/loader/Loader\";\nimport DeleteModel from \"../../components/DeleteModel\";\nimport Select from \"react-select\";\nimport { BsSearch, BsX } from \"react-icons/bs\";\n\nconst Train = () => {\n  const [data, setData] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [deleteShow, setDeleteShow] = useState(false);\n  const [idToDelete, setIdToDelete] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState({\n    value: \"chennai\",\n    label: \"Chennai\",\n  });\n  const [search, setSearch] = useState(\"\");\n  const [itemsPerPage, setItemsPerPage] = useState();\n  const { data: getLocalTrainData, isLoading } = useGetChennaiLocalSearchQuery({\n    page: currentPage,\n    city: selectedCity.value,\n    search: search,\n    id: idToDelete,\n  });\n  const navigate = useNavigate();\n  const [deleteLocalTrain] = useDeleteLocalTrainMutation();\n\n  const handleNavigateAddForm = () => navigate(`/admin/add-localtrain`);\n\n  useEffect(() => {\n    if (getLocalTrainData && getLocalTrainData.data) {\n      setData(getLocalTrainData.data);\n      setTotalPages(getLocalTrainData.pagination.totalPages);\n      setItemsPerPage(getLocalTrainData.pagination.itemsPerPage);\n    }\n  }, [getLocalTrainData]);\n\n  useEffect(() => {\n    setCurrentPage(1);\n    setSearch(\"\");\n  }, [selectedCity]);\n\n  const handleCityChange = (selectedOption) => {\n    setSelectedCity(selectedOption);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const deleteHandleClose = () => {\n    setDeleteShow(false);\n  };\n\n  const deleteHandleShow = (id) => {\n    setIdToDelete(id);\n    setDeleteShow(true);\n  };\n\n  const deleteTrain = async () => {\n    try {\n      const response = await deleteLocalTrain({\n        city: selectedCity.value,\n        id: idToDelete,\n      });\n      if (response?.data) {\n        toast.success(response?.data?.message, { autoClose: 1000 });\n        setDeleteShow(false);\n        setIdToDelete(\"\");\n      } else {\n        toast.error(response?.error?.data.error, { autoClose: 1000 });\n        setDeleteShow(false);\n        setIdToDelete(\"\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"ID\",\n      accessor: \"s_no\",\n    },\n    {\n      Header: \"Train No\",\n      accessor: \"trainNo\",\n    },\n    {\n      Header: \"Train Name\",\n      accessor: \"trainName\",\n    },\n    {\n      Header: \"Type\",\n      accessor: \"type\",\n    },\n    {\n      Header: \"Zone\",\n      accessor: \"zone\",\n    },\n    {\n      Header: \"Updated On\",\n      accessor: \"updatedOn\",\n    },\n    {\n      Header: \"From\",\n      accessor: \"from\",\n    },\n    {\n      Header: \"Departure\",\n      accessor: \"departure\",\n    },\n    {\n      Header: \"To\",\n      accessor: \"to\",\n    },\n    {\n      Header: \"Arrival\",\n      accessor: \"arrival\",\n    },\n    {\n      Header: \"Duration\",\n      accessor: \"duration\",\n    },\n    {\n      Header: \"Distance\",\n      accessor: \"distance\",\n    },\n    {\n      Header: \"Speed\",\n      accessor: \"speed\",\n    },\n    {\n      Header: \"Halts\",\n      accessor: \"halts\",\n    },\n    {\n      Header: \"sClasses\",\n      accessor: \"sClasses\",\n    },\n    {\n      Header: \"sRunsOn\",\n      accessor: \"sRunsOn\",\n    },\n    {\n      Header: \"Train ID\",\n      accessor: \"trainID\",\n    },\n    {\n      Header: \"ACTIONS\",\n      accessor: \"action\",\n      Cell: (props) => {\n        const rowIdx = props.row.original._id;\n\n        return (\n          <div className=\"d-flex align-items-center justify-content-center flex-row\">\n            <Link to={`/admin/edit-localtrain/:${rowIdx}`}>\n              <Button variant=\"warning\">\n                <FaEdit />\n              </Button>\n            </Link>\n            <Button\n              variant=\"danger\"\n              className=\"m-1\"\n              onClick={() => deleteHandleShow(rowIdx)}\n            >\n              <MdDelete />\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      {!isLoading ? (\n        <Container fluid className=\"mt-3\">\n          <Row className=\"\">\n            <Header\n              ONCLICK={handleNavigateAddForm}\n              HEADING=\"Local Trains\"\n              BUTTON_NAME=\"Add Local Train\"\n            />\n            <hr className=\"mt-3\" />\n          </Row>\n          <Row className=\"mb-3\">\n            <Form\n              onSubmit={(e) => e.preventDefault()}\n              className=\"d-flex flex-column flex-md-row align-items-md-center justify-content-start\"\n            >\n              <Col xs={12} md={4} lg={3} className=\"m-2\">\n                <Form.Group controlId=\"city\">\n                  <Form.Label className=\"fs-4\">Select City:</Form.Label>\n                  <Select\n                    value={selectedCity}\n                    onChange={handleCityChange}\n                    options={[\n                      { value: \"chennai\", label: \"Chennai\" },\n                      { value: \"delhi\", label: \"Delhi\" },\n                      { value: \"pune\", label: \"Pune\" },\n                      { value: \"kolkata\", label: \"Kolkata\" },\n                      { value: \"mumbai\", label: \"Mumbai\" },\n                      { value: \"hyderabad\", label: \"Hyderabad\" },\n                    ]}\n                  />\n                </Form.Group>\n              </Col>\n              <Col xs={12} md={4} lg={3} className=\"m-2\">\n                <Form.Group controlId=\"search\" className=\"position-relative\">\n                  <Form.Label className=\"fs-4\">Search:</Form.Label>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <BsSearch />\n                    </span>\n                    <Form.Control\n                      type=\"text\"\n                      value={search}\n                      onChange={handleSearchChange}\n                      placeholder=\"Search LocalTrain\"\n                    />\n                    {search && (\n                      <span\n                        className=\"input-group-text\"\n                        onClick={() => setSearch(\"\")}\n                      >\n                        <BsX style={{ cursor: \"pointer\" }} />\n                      </span>\n                    )}\n                  </div>\n                </Form.Group>\n              </Col>\n            </Form>\n          </Row>\n          <Row className=\"\">\n            {data.length > 0 ? (\n              <BasicTable\n                COLUMNS={COLUMNS}\n                MOCK_DATA={data}\n                currentPage={currentPage}\n                totalPages={totalPages}\n                setCurrentPage={setCurrentPage}\n                itemsPerPage={itemsPerPage}\n              />\n            ) : (\n              <div className=\"text-center\">No data found.</div>\n            )}\n          </Row>\n        </Container>\n      ) : (\n        <Loader />\n      )}\n      <DeleteModel\n        YES={deleteTrain}\n        DELETESTATE={deleteShow}\n        ONCLICK={deleteHandleClose}\n        DESCRIPTION=\"Are you sure you want to delete this Train\"\n        DELETETITLE=\"Local Train\"\n      />\n    </div>\n  );\n};\n\nexport default Train;\n","import * as React from \"react\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\nimport { Container } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <Container className=\"vh-100 d-flex flex-column flex-wrap-wrap justify-content-center align-items-center\">\n    <RotatingLines\n      visible={true}\n      height=\"96\"\n      width=\"96\"\n      strokeColor=\"#0077B2\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      ariaLabel=\"rotating-lines-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n    <p className=\"\">Loading Please Wait</p>\n  </Container>\n);\n\nexport default Loader;\n"],"names":["props","_jsx","children","_jsxs","Modal","show","DELETESTATE","onHide","ONCLICK","centered","Header","closeButton","Title","DELETETITLE","Body","DESCRIPTION","Footer","Button","variant","onClick","YES","className","Row","Col","HEADING","style","backgroundColor","border","FaPlus","size","color","BUTTON_NAME","columns","useMemo","COLUMNS","data","MOCK_DATA","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","useTable","autoResetWidth","useGlobalFilter","useSortBy","usePagination","Container","fluid","Table","striped","bordered","hover","responsive","width","map","headerGroup","_createElement","getHeaderGroupProps","key","id","headers","column","getHeaderProps","concat","whiteSpace","justifyContent","alignItems","e","target","classList","contains","render","toggleSortBy","isSortedDesc","_Fragment","FaSort","length","row","getRowProps","cells","cell","getCellProps","textOverflow","overflow","maxWidth","colSpan","currentPage","totalPages","itemsPerPage","ReactPaginate","breakLabel","onPageChange","selectedPage","setCurrentPage","selected","pageRangeDisplayed","pageCount","renderOnZeroPageCount","activeClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","containerClassName","previousLabel","IconContext","Provider","value","AiFillLeftCircle","nextLabel","AiFillRightCircle","disabled","BiLeftArrow","BiRightArrow","Train","setData","useState","setTotalPages","deleteShow","setDeleteShow","idToDelete","setIdToDelete","selectedCity","setSelectedCity","label","search","setSearch","setItemsPerPage","getLocalTrainData","isLoading","useGetChennaiLocalSearchQuery","city","navigate","useNavigate","deleteLocalTrain","useDeleteLocalTrainMutation","useEffect","pagination","accessor","Cell","rowIdx","original","_id","Link","to","FaEdit","MdDelete","Loader","handleNavigateAddForm","Form","onSubmit","preventDefault","xs","md","lg","Group","controlId","Label","Select","onChange","selectedOption","options","BsSearch","Control","type","placeholder","BsX","cursor","BasicTable","DeleteModel","async","response","_response$data","_response$error","toast","success","message","autoClose","error","console","deleteHandleClose","RotatingLines","visible","height","strokeColor","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}
{"version":3,"file":"static/js/5316.4da0d321.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;"],"names":["ATTRIBUTE_PREFIX","dataAttr","property","concat","activeElement","doc","ownerDocument","active","nodeName","e","body","resolveContainerRef","ref","document","canUseDOM","current","getBoundingClientRect","_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","useRef","hasEnteredRef","handleExited","useEventCallback","useEffect","combinedRef","useMergedRefs","child","cloneElement","ImperativeTransition","_ref2","onEntered","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","renderTransition","Component","runTransition","props","_jsx","Object","assign","NoopTransition","_excluded","manager","useModalManager","provided","window","useWindow","modalManager","ModalManager","getManager","modal","dialog","backdrop","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","style","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","container","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","undefined","tabIndex","React","appear","arguments","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","Context","createContext","Provider","useContext","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","propTypes","PropTypes","variant","CloseButton","ariaLabel","type","classNames","closeLabel","closeVariant","closeButton","ModalContext","handleClick","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","value","super","classList","baseVal","hasClass","marginProp","el","sharedManager","getSharedManager","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","timeout","handleEnter","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","ModalBody","bsPrefix","as","useBootstrapPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","ModalHeader","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}